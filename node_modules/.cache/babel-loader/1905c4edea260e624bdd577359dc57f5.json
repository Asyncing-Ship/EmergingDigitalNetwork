{"ast":null,"code":"var _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { Flex, Box, Button, Heading, Text, IconButton } from \"@chakra-ui/core\";\n\nclass PostItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postID: this.props.postItem.id\n    };\n\n    this.deletePost = event => {\n      console.log(\"In delete\");\n      this.props.dispatch({\n        type: \"DELETE_POST\",\n        payload: event.target.id\n      });\n\n      try {\n        this.props.dispatch({\n          type: \"FETCH_POSTS\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.props.history.push(\"/\");\n    };\n\n    this.addPostComment = event => {};\n\n    this.addPostLike = event => {};\n\n    this.editPost = event => {};\n  }\n\n  render() {\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        textAlign: \"center\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_body), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, this.props.postItem.likes), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, \"Comment\"), /*#__PURE__*/React.createElement(IconButton, {\n        icon: \"chevron-up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.editPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.deletePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, \"Delete\")));\n    } else {\n      return /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        textAlign: \"center\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_body), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, this.props.postItem.likes), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, \"Comment\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, \"Like\")));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js"],"names":["React","Component","withRouter","connect","Flex","Box","Button","Heading","Text","IconButton","PostItem","state","postID","props","postItem","id","deletePost","event","console","log","dispatch","type","payload","target","error","history","push","addPostComment","addPostLike","editPost","render","user","user_id","post_title","post_body","likes","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\n\nimport { connect } from \"react-redux\";\nimport { Flex, Box, Button, Heading, Text, IconButton } from \"@chakra-ui/core\";\n\nclass PostItem extends Component {\n  state = {\n    postID: this.props.postItem.id,\n  };\n\n  // addPostComment = () => {\n  //   //\n  // };\n\n  // addPostLike = () => {\n  //   //\n  // };\n\n  // Axios.delete(`/api/posts/${event.target.id}`)\n\n  deletePost = (event) => {\n    console.log(\"In delete\");\n    this.props.dispatch({ type: \"DELETE_POST\", payload: event.target.id });\n    try {\n      this.props.dispatch({ type: \"FETCH_POSTS\" });\n    } catch (error) {\n      console.log(error);\n    }\n    this.props.history.push(\"/\");\n  };\n\n  addPostComment = (event) => {};\n\n  addPostLike = (event) => {};\n\n  editPost = (event) => {};\n\n  render() {\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return (\n        <Flex width=\"full\" justifyContent=\"center\">\n          <Box\n            m={4}\n            textAlign=\"center\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            px={4}\n            width=\"full\"\n            maxWidth=\"100%\"\n            textAlign=\"center\"\n            boxShadow=\"lg\"\n            p={4}\n            py={8}\n          >\n            {/* <div className=\"postItem\"> */}\n            <Heading as=\"h3\" size=\"lg\">\n              {this.props.postItem.post_title}\n            </Heading>\n            <Text>{this.props.postItem.post_body}</Text>\n            <Text>{this.props.postItem.likes}</Text>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostComment}\n            >\n              Comment\n            </Button>\n            <IconButton icon=\"chevron-up\"></IconButton>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostLike}\n            >\n              Like\n            </Button>\n            <Button m={1} id={this.props.postItem.id} onClick={this.editPost}>\n              Edit\n            </Button>\n            <Button m={1} id={this.props.postItem.id} onClick={this.deletePost}>\n              Delete\n            </Button>\n            {/* </div> */}\n          </Box>\n        </Flex>\n      );\n    } else {\n      return (\n        <Flex width=\"full\" justifyContent=\"center\">\n          <Box\n            m={4}\n            textAlign=\"center\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            px={4}\n            width=\"full\"\n            maxWidth=\"100%\"\n            textAlign=\"center\"\n            boxShadow=\"lg\"\n            p={4}\n            py={8}\n          >\n            <Heading as=\"h3\" size=\"lg\">\n              {this.props.postItem.post_title}\n            </Heading>\n            <Text>{this.props.postItem.post_body}</Text>\n            <p>{this.props.postItem.likes}</p>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostComment}\n            >\n              Comment\n            </Button>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostLike}\n            >\n              Like\n            </Button>\n          </Box>\n        </Flex>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));\n"]},"metadata":{},"sourceType":"module"}