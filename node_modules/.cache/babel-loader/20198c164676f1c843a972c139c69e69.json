{"ast":null,"code":"import _regeneratorRuntime from \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchResources),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchResourcesDetail),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addResources),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(fetchCurrentResource),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(updateResource),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(deleteResource),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(addResourceLike),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(resourceSaga);\n\nimport Axios from \"axios\";\nimport { put, takeEvery, take } from \"redux-saga/effects\"; // function to get Posts\n\nfunction fetchResources(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchResources$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.prev = 0;\n        _context.next = 3;\n        return Axios.get(\"/api/resources\");\n\n      case 3:\n        response = _context.sent;\n        _context.next = 6;\n        return put({\n          type: \"SET_RESOURCES\",\n          payload: response.data\n        });\n\n      case 6:\n        _context.next = 11;\n        break;\n\n      case 8:\n        _context.prev = 8;\n        _context.t0 = _context[\"catch\"](0);\n        // console.log('Error fetching Posts', error);\n        alert(\"unable to get resources from server\");\n\n      case 11:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked, null, [[0, 8]]);\n} // function to get current Post\n\n\nfunction fetchResourcesDetail(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchResourcesDetail$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.prev = 0;\n        _context2.next = 3;\n        return Axios.get(\"/api/resources/detail/\".concat(action.payload));\n\n      case 3:\n        response = _context2.sent;\n        _context2.next = 6;\n        return put({\n          type: \"SET_RESOURCES_DETAIL\",\n          payload: response.data\n        });\n\n      case 6:\n        _context2.next = 11;\n        break;\n\n      case 8:\n        _context2.prev = 8;\n        _context2.t0 = _context2[\"catch\"](0);\n        // console.log('Error fetching posts', error);\n        alert(\"Unable to get resources detail from server\");\n\n      case 11:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _marked2, null, [[0, 8]]);\n} // function to add Posts\n\n\nfunction addResources(action) {\n  return _regeneratorRuntime.wrap(function addResources$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        _context3.prev = 0;\n        _context3.next = 3;\n        return Axios.post(\"/api/resources\", action.payload);\n\n      case 3:\n        _context3.next = 8;\n        break;\n\n      case 5:\n        _context3.prev = 5;\n        _context3.t0 = _context3[\"catch\"](0);\n        // console.log('Error fetching Posts', error);\n        alert(\"unable to add new Resource to server\");\n\n      case 8:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, _marked3, null, [[0, 5]]);\n} // function to get current Post\n\n\nfunction fetchCurrentResource(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchCurrentResource$(_context4) {\n    while (1) switch (_context4.prev = _context4.next) {\n      case 0:\n        _context4.prev = 0;\n        _context4.next = 3;\n        return Axios.get(\"/api/resources/\".concat(action.payload));\n\n      case 3:\n        response = _context4.sent;\n        _context4.next = 6;\n        return put({\n          type: \"SET_CURRENT_RESOURCE\",\n          payload: response.data\n        });\n\n      case 6:\n        _context4.next = 11;\n        break;\n\n      case 8:\n        _context4.prev = 8;\n        _context4.t0 = _context4[\"catch\"](0);\n        // console.log('Error fetching posts', error);\n        alert(\"Unable to fetch current Resource\");\n\n      case 11:\n      case \"end\":\n        return _context4.stop();\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction updateResource(action) {\n  return _regeneratorRuntime.wrap(function updateResource$(_context5) {\n    while (1) switch (_context5.prev = _context5.next) {\n      case 0:\n        _context5.prev = 0;\n        _context5.next = 3;\n        return Axios.put(\"/api/resources/\".concat(action.payload.currentId), action.payload);\n\n      case 3:\n        _context5.next = 8;\n        break;\n\n      case 5:\n        _context5.prev = 5;\n        _context5.t0 = _context5[\"catch\"](0);\n        alert(\"Unable to update Resource on server\", _context5.t0);\n\n      case 8:\n      case \"end\":\n        return _context5.stop();\n    }\n  }, _marked5, null, [[0, 5]]);\n}\n\nfunction deleteResource(action) {\n  return _regeneratorRuntime.wrap(function deleteResource$(_context6) {\n    while (1) switch (_context6.prev = _context6.next) {\n      case 0:\n        // wrap it all in try/catch\n        // yield axios\n        // dispatch the result with put!\n        try {\n          Axios.delete(\"/api/resources/\".concat(action.payload));\n        } catch (error) {\n          // console.log('Error fetching Posts', error);\n          alert(\"unable to delete Resource from server\");\n        }\n\n      case 1:\n      case \"end\":\n        return _context6.stop();\n    }\n  }, _marked6);\n}\n\nfunction addResourceLike(action) {\n  return _regeneratorRuntime.wrap(function addResourceLike$(_context7) {\n    while (1) switch (_context7.prev = _context7.next) {\n      case 0:\n        _context7.prev = 0;\n        _context7.next = 3;\n        return Axios.post(\"api/resources/upvotes\", action.payload);\n\n      case 3:\n        _context7.next = 8;\n        break;\n\n      case 5:\n        _context7.prev = 5;\n        _context7.t0 = _context7[\"catch\"](0);\n        alert(\"unable to add resource like to server\" + _context7.t0);\n\n      case 8:\n      case \"end\":\n        return _context7.stop();\n    }\n  }, _marked7, null, [[0, 5]]);\n}\n\nfunction resourceSaga() {\n  return _regeneratorRuntime.wrap(function resourceSaga$(_context8) {\n    while (1) switch (_context8.prev = _context8.next) {\n      case 0:\n        _context8.next = 2;\n        return takeEvery(\"FETCH_RESOURCES\", fetchResources);\n\n      case 2:\n        _context8.next = 4;\n        return takeEvery(\"FETCH_RESOURCES_DETAIL\", fetchResourcesDetail);\n\n      case 4:\n        _context8.next = 6;\n        return takeEvery(\"UPDATE_RESOURCE\", updateResource);\n\n      case 6:\n        _context8.next = 8;\n        return takeEvery(\"FETCH_CURRENT_RESOURCE\", fetchCurrentResource);\n\n      case 8:\n        _context8.next = 10;\n        return takeEvery(\"ADD_RESOURCE\", addResources);\n\n      case 10:\n        _context8.next = 12;\n        return takeEvery(\"DELETE_RESOURCE\", deleteResource);\n\n      case 12:\n        _context8.next = 14;\n        return takeEvery(\"ADD_RESOURCE_LIKE\", addResourceLike);\n\n      case 14:\n      case \"end\":\n        return _context8.stop();\n    }\n  }, _marked8);\n}\n\nexport default resourceSaga;","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/redux/sagas/resourceSaga.js"],"names":["fetchResources","fetchResourcesDetail","addResources","fetchCurrentResource","updateResource","deleteResource","addResourceLike","resourceSaga","Axios","put","takeEvery","take","action","get","response","type","payload","data","alert","post","currentId","delete","error"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport { put, takeEvery, take } from \"redux-saga/effects\";\n\n// function to get Posts\nfunction* fetchResources(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    const response = yield Axios.get(\"/api/resources\");\n    // const result = yield call(axios.get, '/post');\n    yield put({ type: \"SET_RESOURCES\", payload: response.data });\n  } catch (error) {\n    // console.log('Error fetching Posts', error);\n    alert(\"unable to get resources from server\");\n  }\n}\n\n// function to get current Post\nfunction* fetchResourcesDetail(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    const response = yield Axios.get(`/api/resources/detail/${action.payload}`);\n    // const result = yield call(axios.get, '/post');\n    yield put({ type: \"SET_RESOURCES_DETAIL\", payload: response.data });\n  } catch (error) {\n    // console.log('Error fetching posts', error);\n    alert(\"Unable to get resources detail from server\");\n  }\n}\n\n// function to add Posts\nfunction* addResources(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    yield Axios.post(\"/api/resources\", action.payload);\n  } catch (error) {\n    // console.log('Error fetching Posts', error);\n    alert(\"unable to add new Resource to server\");\n  }\n}\n\n// function to get current Post\nfunction* fetchCurrentResource(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    const response = yield Axios.get(`/api/resources/${action.payload}`);\n    // const result = yield call(axios.get, '/post');\n    yield put({ type: \"SET_CURRENT_RESOURCE\", payload: response.data });\n  } catch (error) {\n    // console.log('Error fetching posts', error);\n    alert(\"Unable to fetch current Resource\");\n  }\n}\nfunction* updateResource(action) {\n  //Update the post\n  try {\n    yield Axios.put(\n      `/api/resources/${action.payload.currentId}`,\n      action.payload\n    );\n  } catch (error) {\n    alert(\"Unable to update Resource on server\", error);\n  }\n}\n\nfunction* deleteResource(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    Axios.delete(`/api/resources/${action.payload}`);\n  } catch (error) {\n    // console.log('Error fetching Posts', error);\n    alert(\"unable to delete Resource from server\");\n  }\n}\n\nfunction* addResourceLike(action) {\n  try {\n    yield Axios.post(\"api/resources/upvotes\", action.payload);\n  } catch (error) {\n    alert(\"unable to add resource like to server\" + error);\n  }\n}\n\nfunction* resourceSaga() {\n  yield takeEvery(\"FETCH_RESOURCES\", fetchResources);\n  yield takeEvery(\"FETCH_RESOURCES_DETAIL\", fetchResourcesDetail);\n  yield takeEvery(\"UPDATE_RESOURCE\", updateResource);\n  yield takeEvery(\"FETCH_CURRENT_RESOURCE\", fetchCurrentResource);\n  yield takeEvery(\"ADD_RESOURCE\", addResources);\n  yield takeEvery(\"DELETE_RESOURCE\", deleteResource);\n  yield takeEvery(\"ADD_RESOURCE_LIKE\", addResourceLike);\n}\n\nexport default resourceSaga;\n"]},"metadata":{},"sourceType":"module"}