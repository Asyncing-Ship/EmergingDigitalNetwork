{"ast":null,"code":"var _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Flex, Box, Button, Heading, Text, IconButton, Stack, Link } from \"@chakra-ui/core\";\nimport AddComment from \"../../Comment/AddComment\";\nimport Thread from \"../../Thread/PostThread\";\nimport Axios from \"axios\";\n\nclass PostItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: {\n        comments: 0\n      },\n      displayThread: false\n    };\n\n    this.switchDisplay = () => {\n      if (this.state.displayThread === true) {\n        this.setState({\n          displayThread: false\n        });\n      } else {\n        this.setState({\n          displayThread: true\n        });\n      }\n    };\n\n    this.deletePost = event => {\n      console.log(\"In delete\");\n      this.props.dispatch({\n        type: \"DELETE_POST\",\n        payload: event.target.id\n      });\n\n      try {\n        this.props.dispatch({\n          type: \"FETCH_POSTS\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.props.history.push(\"/\");\n    };\n\n    this.addPostComment = event => {};\n\n    this.addPostLike = event => {};\n\n    this.editPost = event => {};\n  }\n\n  // this.props.dispatch({\n  //   type: \"FETCH_POST_COMMENTS\",\n  //   payload: this.props.postItem.id,\n  // });\n  componentDidMount() {\n    Axios.get(\"api/posts/comments/\".concat(this.props.postItem.id)).then(result => {\n      console.table(result.data);\n      this.setState({\n        comments: {\n          comments: result.data\n        }\n      });\n    }).catch(error => console.log(\"error getting comments\", error));\n  }\n\n  render() {\n    const commentOrcomments = () => {\n      if (this.state.comments.comments.length === 1) {\n        return \"Comment\";\n      } else {\n        return \"Comments\";\n      }\n    };\n\n    const likeOrLikes = () => {\n      if (this.props.postItem.likes === 1) {\n        return \"Like\";\n      } else {\n        return \"Likes\";\n      }\n    };\n\n    const viewOrClose = () => {\n      if (this.state.displayThread) {\n        return \"Close Thread\";\n      } else {\n        return \"View Thread\";\n      }\n    };\n\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        mb: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, \"By\"), /*#__PURE__*/React.createElement(Heading, {\n        mb: 2,\n        as: \"h5\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, this.props.postItem.first_name), /*#__PURE__*/React.createElement(Text, {\n        mb: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_body), /*#__PURE__*/React.createElement(Stack, {\n        isInline: true,\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, this.props.postItem.likes, \" \", likeOrLikes()), /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, this.state.comments.comments.length, \" \", commentOrcomments())), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.editPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.deletePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, \"Delete\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        pt: 4,\n        onClick: this.switchDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, viewOrClose()), this.state.displayThread ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, this.state.comments.comments.map(comment => {\n        return /*#__PURE__*/React.createElement(Box, {\n          borderTopColor: \"red\",\n          borderWidth: 1,\n          borderRadius: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }\n        }, comment.first_name, \": \", comment.body));\n      })), /*#__PURE__*/React.createElement(AddComment, {\n        postItem: this.props.postItem,\n        userID: this.props.user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n    } else {\n      return /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }, \"By\"), /*#__PURE__*/React.createElement(Heading, {\n        mb: 2,\n        as: \"h5\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, this.props.postItem.first_name), /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, this.props.postItem.likes, \" Likes\"), /*#__PURE__*/React.createElement(Link, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, this.state.comments.length, \" Comments\"), /*#__PURE__*/React.createElement(Stack, {\n        isInline: true,\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }\n      }, this.props.postItem.likes, \" \", likeOrLikes()), /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      }, this.state.comments.comments.length, \" \", commentOrcomments())), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        pt: 4,\n        onClick: this.switchDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, \"View Thread\"), this.state.displayThread ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddComment, {\n        postItem: this.props.postItem,\n        userID: this.props.user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  members: state.members\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js"],"names":["React","Component","withRouter","BrowserRouter","Router","Route","connect","Flex","Box","Button","Heading","Text","IconButton","Stack","Link","AddComment","Thread","Axios","PostItem","state","comments","displayThread","switchDisplay","setState","deletePost","event","console","log","props","dispatch","type","payload","target","id","error","history","push","addPostComment","addPostLike","editPost","componentDidMount","get","postItem","then","result","table","data","catch","render","commentOrcomments","length","likeOrLikes","likes","viewOrClose","user","user_id","post_title","first_name","post_body","map","comment","body","mapStateToProps","members"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Button,\n  Heading,\n  Text,\n  IconButton,\n  Stack,\n  Link,\n} from \"@chakra-ui/core\";\nimport AddComment from \"../../Comment/AddComment\";\nimport Thread from \"../../Thread/PostThread\";\nimport Axios from \"axios\";\n\nclass PostItem extends Component {\n  state = {\n    comments: {\n      comments: 0,\n    },\n    displayThread: false,\n  };\n\n  // this.props.dispatch({\n  //   type: \"FETCH_POST_COMMENTS\",\n  //   payload: this.props.postItem.id,\n  // });\n\n  componentDidMount() {\n    Axios.get(`api/posts/comments/${this.props.postItem.id}`)\n      .then((result) => {\n        console.table(result.data);\n        this.setState({\n          comments: { comments: result.data },\n        });\n      })\n      .catch((error) => console.log(\"error getting comments\", error));\n  }\n\n  switchDisplay = () => {\n    if (this.state.displayThread === true) {\n      this.setState({ displayThread: false });\n    } else {\n      this.setState({ displayThread: true });\n    }\n  };\n\n  // addPostLike = () => {\n  //   //\n  // };\n\n  // Axios.delete(`/api/posts/${event.target.id}`)\n\n  deletePost = (event) => {\n    console.log(\"In delete\");\n    this.props.dispatch({ type: \"DELETE_POST\", payload: event.target.id });\n    try {\n      this.props.dispatch({ type: \"FETCH_POSTS\" });\n    } catch (error) {\n      console.log(error);\n    }\n    this.props.history.push(\"/\");\n  };\n\n  addPostComment = (event) => {};\n\n  addPostLike = (event) => {};\n\n  editPost = (event) => {};\n\n  render() {\n    const commentOrcomments = () => {\n      if (this.state.comments.comments.length === 1) {\n        return \"Comment\";\n      } else {\n        return \"Comments\";\n      }\n    };\n\n    const likeOrLikes = () => {\n      if (this.props.postItem.likes === 1) {\n        return \"Like\";\n      } else {\n        return \"Likes\";\n      }\n    };\n\n    const viewOrClose = () => {\n      if (this.state.displayThread) {\n        return \"Close Thread\";\n      } else {\n        return \"View Thread\";\n      }\n    };\n\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return (\n        <Flex width=\"full\" justifyContent=\"center\">\n          <Box\n            m={4}\n            textAlign=\"center\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            px={4}\n            width=\"full\"\n            maxWidth=\"100%\"\n            boxShadow=\"lg\"\n            p={4}\n            py={8}\n          >\n            {/* <div className=\"postItem\"> */}\n            <Heading as=\"h3\" size=\"lg\" mb={2}>\n              {this.props.postItem.post_title}\n            </Heading>\n            <Text>By</Text>\n            <Heading mb={2} as=\"h5\" size=\"sm\">\n              {this.props.postItem.first_name}\n            </Heading>\n            <Text mb={8}>{this.props.postItem.post_body}</Text>\n            <Stack isInline width=\"full\" justifyContent=\"center\">\n              <Text p={2}>\n                {this.props.postItem.likes} {likeOrLikes()}\n              </Text>\n              <Text p={2}>\n                {this.state.comments.comments.length} {commentOrcomments()}\n              </Text>\n            </Stack>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostLike}\n            >\n              Like\n            </Button>\n            <Button m={1} id={this.props.postItem.id} onClick={this.editPost}>\n              Edit\n            </Button>\n            <Button m={1} id={this.props.postItem.id} onClick={this.deletePost}>\n              Delete\n            </Button>\n            <br />\n            <br />\n            <Link pt={4} onClick={this.switchDisplay}>\n              {viewOrClose()}\n            </Link>\n\n            {this.state.displayThread ? (\n              <>\n                <Box>\n                  {this.state.comments.comments.map((comment) => {\n                    return (\n                      <Box\n                        borderTopColor=\"red\"\n                        borderWidth={1}\n                        borderRadius={2}\n                      >\n                        <Text>\n                          {comment.first_name}: {comment.body}\n                        </Text>\n                      </Box>\n                    );\n                  })}\n                </Box>\n                <AddComment\n                  postItem={this.props.postItem}\n                  userID={this.props.user.id}\n                />\n              </>\n            ) : (\n              <></>\n            )}\n          </Box>\n        </Flex>\n      );\n    } else {\n      return (\n        <Flex width=\"full\" justifyContent=\"center\">\n          <Box\n            m={4}\n            textAlign=\"center\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            px={4}\n            width=\"full\"\n            maxWidth=\"100%\"\n            boxShadow=\"lg\"\n            p={4}\n            py={8}\n          >\n            <Heading as=\"h3\" size=\"lg\">\n              {this.props.postItem.post_title}\n            </Heading>\n            <Text>By</Text>\n            <Heading mb={2} as=\"h5\" size=\"sm\">\n              {this.props.postItem.first_name}\n            </Heading>\n            <Text p={2}>{this.props.postItem.likes} Likes</Text>\n            <Link p={2}>{this.state.comments.length} Comments</Link>\n            <Stack isInline width=\"full\" justifyContent=\"center\">\n              <Text p={2}>\n                {this.props.postItem.likes} {likeOrLikes()}\n              </Text>\n              <Text p={2}>\n                {this.state.comments.comments.length} {commentOrcomments()}\n              </Text>\n            </Stack>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostLike}\n            >\n              Like\n            </Button>\n            <br />\n            <br />\n            <Link pt={4} onClick={this.switchDisplay}>\n              View Thread\n            </Link>\n\n            {this.state.displayThread ? (\n              <>\n                <AddComment\n                  postItem={this.props.postItem}\n                  userID={this.props.user.id}\n                />\n              </>\n            ) : (\n              <></>\n            )}\n          </Box>\n        </Flex>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  members: state.members,\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));\n"]},"metadata":{},"sourceType":"module"}