{"ast":null,"code":"import _objectSpread from \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/AddPost/AddPost.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { Box, Flex, Text } from \"@chakra-ui/core\";\n\nclass Edit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newPost: {\n        postTitle: \"\",\n        postBody: \"\"\n      }\n    };\n\n    this.handleChangeFor = (propertyName, event) => {\n      // Updates our local state when input is changed\n      this.setState({\n        newPost: _objectSpread(_objectSpread({}, this.state.newPost), {}, {\n          [propertyName]: event.target.value\n        })\n      });\n    };\n\n    this.cancel = event => {\n      this.props.history.push(\"/\");\n    };\n\n    this.submitInfo = event => {\n      // Updates the information with our current local state\n      this.props.dispatch({\n        type: \"ADD_POST\",\n        payload: this.state.newPost\n      });\n      this.setState({\n        // clears local state\n        newPost: {\n          postTitle: \"\",\n          postBody: \"\"\n        }\n      });\n      this.props.history.push(\"/\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Flex, {\n      mt: 10,\n      minHeight: \"100vh\",\n      width: \"full\",\n      align: \"center\",\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      borderWidth: 1,\n      borderRadius: \"lg\",\n      px: 4,\n      width: \"full\",\n      maxWidth: \"50%\",\n      textAlign: \"center\",\n      boxShadow: \"lg\",\n      p: 4,\n      py: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"New Post Title:\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"postTitle\",\n      type: \"text\",\n      required: true,\n      placeholder: \"New Title\",\n      rows: \"1\",\n      onChange: event => this.handleChangeFor(\"postTitle\", event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"New Post Content:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"postContent\",\n      type: \"text\",\n      required: true,\n      placeholder: \"Post Content\",\n      rows: \"8\",\n      cols: \"50\",\n      onChange: event => this.handleChangeFor(\"postBody\", event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Post\"), /*#__PURE__*/React.createElement(\"button\", {\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"small\",\n      onClick: this.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps)(Edit));","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/AddPost/AddPost.js"],"names":["React","Component","connect","withRouter","Box","Flex","Text","Edit","state","newPost","postTitle","postBody","handleChangeFor","propertyName","event","setState","target","value","cancel","props","history","push","submitInfo","dispatch","type","payload","render","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,QAAgC,iBAAhC;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE3BO,KAF2B,GAEnB;AACNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAE,EADJ;AAEPC,QAAAA,QAAQ,EAAE;AAFH;AADH,KAFmB;;AAAA,SAS3BC,eAT2B,GAST,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACzC;AACA,WAAKC,QAAL,CAAc;AACZN,QAAAA,OAAO,kCACF,KAAKD,KAAL,CAAWC,OADT;AAEL,WAACI,YAAD,GAAgBC,KAAK,CAACE,MAAN,CAAaC;AAFxB;AADK,OAAd;AAMD,KAjB0B;;AAAA,SAmB3BC,MAnB2B,GAmBjBJ,KAAD,IAAW;AAClB,WAAKK,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KArB0B;;AAAA,SAuB3BC,UAvB2B,GAuBbR,KAAD,IAAW;AACtB;AAEA,WAAKK,KAAL,CAAWI,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWC;AAAxC,OAApB;AACA,WAAKM,QAAL,CAAc;AACZ;AACAN,QAAAA,OAAO,EAAE;AACPC,UAAAA,SAAS,EAAE,EADJ;AAEPC,UAAAA,QAAQ,EAAE;AAFH;AAFG,OAAd;AAOA,WAAKQ,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KAnC0B;AAAA;;AAqC3BK,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAE,EADN;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,KAAK,EAAC,QAJR;AAKE,MAAA,cAAc,EAAC,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,GAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,WAAW,EAAE,CAFf;AAGE,MAAA,YAAY,EAAC,IAHf;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,KAAK,EAAC,MALR;AAME,MAAA,QAAQ,EAAC,KANX;AAOE,MAAA,SAAS,EAAC,QAPZ;AAQE,MAAA,SAAS,EAAC,IARZ;AASE,MAAA,CAAC,EAAE,CATL;AAUE,MAAA,EAAE,EAAE,CAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAZF,eAaE;AAAM,MAAA,QAAQ,EAAE,KAAKJ,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,WAAW,EAAC,WAJd;AAKE,MAAA,IAAI,EAAC,GALP;AAME,MAAA,QAAQ,EAAGR,KAAD,IAAW,KAAKF,eAAL,CAAqB,WAArB,EAAkCE,KAAlC,CANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVF,eAWE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,WAAW,EAAC,cAJd;AAKE,MAAA,IAAI,EAAC,GALP;AAME,MAAA,IAAI,EAAC,IANP;AAOE,MAAA,QAAQ,EAAGA,KAAD,IAAW,KAAKF,eAAL,CAAqB,UAArB,EAAiCE,KAAjC,CAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,eAsBE;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eA8BE;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,OAAO,EAAE,KAAKI,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF,CAbF,CAPF,CADF;AA+DD;;AArG0B;;AAwG7B,MAAMS,eAAe,GAAInB,KAAD,IAAW;AACjC,SAAO,EAAP;AACD,CAFD;;AAGA,eAAeL,UAAU,CAACD,OAAO,CAACyB,eAAD,CAAP,CAAyBpB,IAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { Box, Flex, Text } from \"@chakra-ui/core\";\n\nclass Edit extends Component {\n  // The edit component allows the user to change the title and or description of a movie.\n  state = {\n    newPost: {\n      postTitle: \"\",\n      postBody: \"\",\n    },\n  };\n\n  handleChangeFor = (propertyName, event) => {\n    // Updates our local state when input is changed\n    this.setState({\n      newPost: {\n        ...this.state.newPost,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  cancel = (event) => {\n    this.props.history.push(\"/\");\n  };\n\n  submitInfo = (event) => {\n    // Updates the information with our current local state\n\n    this.props.dispatch({ type: \"ADD_POST\", payload: this.state.newPost });\n    this.setState({\n      // clears local state\n      newPost: {\n        postTitle: \"\",\n        postBody: \"\",\n      },\n    });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    return (\n      <Flex\n        mt={10}\n        minHeight=\"100vh\"\n        width=\"full\"\n        align=\"center\"\n        justifyContent=\"center\"\n      >\n        <Box\n          textAlign=\"center\"\n          borderWidth={1}\n          borderRadius=\"lg\"\n          px={4}\n          width=\"full\"\n          maxWidth=\"50%\"\n          textAlign=\"center\"\n          boxShadow=\"lg\"\n          p={4}\n          py={8}\n        >\n          <Text>New Post Title:</Text>\n          <form onSubmit={this.submitInfo}>\n            <textarea\n              className=\"postTitle\"\n              type=\"text\"\n              required\n              placeholder=\"New Title\"\n              rows=\"1\"\n              onChange={(event) => this.handleChangeFor(\"postTitle\", event)}\n            />\n            <br />\n            <p>New Post Content:</p>\n            <textarea\n              className=\"postContent\"\n              type=\"text\"\n              required\n              placeholder=\"Post Content\"\n              rows=\"8\"\n              cols=\"50\"\n              onChange={(event) => this.handleChangeFor(\"postBody\", event)}\n            />\n            <br />\n            <br />\n            <button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              type=\"submit\"\n            >\n              Post\n            </button>\n            <button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={this.cancel}\n            >\n              Cancel\n            </button>\n          </form>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nexport default withRouter(connect(mapStateToProps)(Edit));\n"]},"metadata":{},"sourceType":"module"}