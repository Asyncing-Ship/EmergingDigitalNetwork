{"ast":null,"code":"var _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { Flex, Box, Button, Heading, Text, IconButton, Stack } from \"@chakra-ui/core\";\nimport AddComment from \"../../Comment/AddComment\";\nimport Axios from \"axios\";\n\nclass PostItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: 0\n    };\n\n    this.deletePost = event => {\n      console.log(\"In delete\");\n      this.props.dispatch({\n        type: \"DELETE_POST\",\n        payload: event.target.id\n      });\n\n      try {\n        this.props.dispatch({\n          type: \"FETCH_POSTS\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.props.history.push(\"/\");\n    };\n\n    this.addPostComment = event => {};\n\n    this.addPostLike = event => {};\n\n    this.editPost = event => {};\n  }\n\n  // this.props.dispatch({\n  //   type: \"FETCH_POST_COMMENTS\",\n  //   payload: this.props.postItem.id,\n  // });\n  componentDidMount() {\n    Axios.get(\"api/posts/comments/\".concat(this.props.postItem.id)).then(result => {\n      console.table(result.data);\n      this.setState({\n        comments: result.data\n      });\n    }).catch(error => console.log(\"error getting comments\", error));\n  } // addPostLike = () => {\n  //   //\n  // };\n  // Axios.delete(`/api/posts/${event.target.id}`)\n\n\n  render() {\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        mb: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"By\"), /*#__PURE__*/React.createElement(Heading, {\n        mb: 2,\n        as: \"h5\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, this.props.postItem.first_name), /*#__PURE__*/React.createElement(Text, {\n        mb: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_body), /*#__PURE__*/React.createElement(Stack, {\n        isInline: true,\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, this.props.postItem.likes, \" Likes\"), /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, this.state.comments.length, \" Comments\")), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.editPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.deletePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, \"Delete\"), /*#__PURE__*/React.createElement(AddComment, {\n        postItem: this.props.postItem,\n        userID: this.props.user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, \"By\"), /*#__PURE__*/React.createElement(Heading, {\n        mb: 2,\n        as: \"h5\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, this.props.postItem.first_name), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_body), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, this.props.postItem.likes), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(AddComment, {\n        postItem: this.props.postItem,\n        userID: this.props.user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js"],"names":["React","Component","withRouter","connect","Flex","Box","Button","Heading","Text","IconButton","Stack","AddComment","Axios","PostItem","state","comments","deletePost","event","console","log","props","dispatch","type","payload","target","id","error","history","push","addPostComment","addPostLike","editPost","componentDidMount","get","postItem","then","result","table","data","setState","catch","render","user","user_id","post_title","first_name","post_body","likes","length","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Button,\n  Heading,\n  Text,\n  IconButton,\n  Stack,\n} from \"@chakra-ui/core\";\nimport AddComment from \"../../Comment/AddComment\";\nimport Axios from \"axios\";\n\nclass PostItem extends Component {\n  state = {\n    comments: 0,\n  };\n\n  // this.props.dispatch({\n  //   type: \"FETCH_POST_COMMENTS\",\n  //   payload: this.props.postItem.id,\n  // });\n\n  componentDidMount() {\n    Axios.get(`api/posts/comments/${this.props.postItem.id}`)\n      .then((result) => {\n        console.table(result.data);\n        this.setState({\n          comments: result.data,\n        });\n      })\n      .catch((error) => console.log(\"error getting comments\", error));\n  }\n\n  // addPostLike = () => {\n  //   //\n  // };\n\n  // Axios.delete(`/api/posts/${event.target.id}`)\n\n  deletePost = (event) => {\n    console.log(\"In delete\");\n    this.props.dispatch({ type: \"DELETE_POST\", payload: event.target.id });\n    try {\n      this.props.dispatch({ type: \"FETCH_POSTS\" });\n    } catch (error) {\n      console.log(error);\n    }\n    this.props.history.push(\"/\");\n  };\n\n  addPostComment = (event) => {};\n\n  addPostLike = (event) => {};\n\n  editPost = (event) => {};\n\n  render() {\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return (\n        <Flex width=\"full\" justifyContent=\"center\">\n          <Box\n            m={4}\n            textAlign=\"center\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            px={4}\n            width=\"full\"\n            maxWidth=\"100%\"\n            boxShadow=\"lg\"\n            p={4}\n            py={8}\n          >\n            {/* <div className=\"postItem\"> */}\n            <Heading as=\"h3\" size=\"lg\" mb={2}>\n              {this.props.postItem.post_title}\n            </Heading>\n            <Text>By</Text>\n            <Heading mb={2} as=\"h5\" size=\"sm\">\n              {this.props.postItem.first_name}\n            </Heading>\n            <Text mb={8}>{this.props.postItem.post_body}</Text>\n            <Stack isInline width=\"full\" justifyContent=\"center\">\n              <Text p={2}>{this.props.postItem.likes} Likes</Text>\n              <Text p={2}>{this.state.comments.length} Comments</Text>\n            </Stack>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostLike}\n            >\n              Like\n            </Button>\n            <Button m={1} id={this.props.postItem.id} onClick={this.editPost}>\n              Edit\n            </Button>\n            <Button m={1} id={this.props.postItem.id} onClick={this.deletePost}>\n              Delete\n            </Button>\n            <AddComment\n              postItem={this.props.postItem}\n              userID={this.props.user.id}\n            />\n          </Box>\n        </Flex>\n      );\n    } else {\n      return (\n        <Flex width=\"full\" justifyContent=\"center\">\n          <Box\n            m={4}\n            textAlign=\"center\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            px={4}\n            width=\"full\"\n            maxWidth=\"100%\"\n            boxShadow=\"lg\"\n            p={4}\n            py={8}\n          >\n            <Heading as=\"h3\" size=\"lg\">\n              {this.props.postItem.post_title}\n            </Heading>\n            <Text>By</Text>\n            <Heading mb={2} as=\"h5\" size=\"sm\">\n              {this.props.postItem.first_name}\n            </Heading>\n            <Text>{this.props.postItem.post_body}</Text>\n            <p>{this.props.postItem.likes}</p>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostLike}\n            >\n              Like\n            </Button>\n            <AddComment\n              postItem={this.props.postItem}\n              userID={this.props.user.id}\n            />\n          </Box>\n        </Flex>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));\n"]},"metadata":{},"sourceType":"module"}