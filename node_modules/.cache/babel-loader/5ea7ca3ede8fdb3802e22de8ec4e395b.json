{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport errors from \"./errorsReducer\";\nimport loginMode from \"./loginModeReducer\";\nimport user from \"./userReducer\";\nimport posts from \"./postsReducer\";\nimport resources from \"./resourcesReducer\";\nimport members from \"./membersReducer\";\nimport profile from \"./profileReducer\"; // rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\n\nconst rootReducer = combineReducers({\n  errors,\n  // contains registrationMessage and loginMessage\n  loginMode,\n  // will have a value of 'login' or 'registration' to control which screen is shown\n  user,\n  // will have an id and email if someone is logged in\n  members,\n  posts,\n  // contains all post reducers\n  resources,\n  profile\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/redux/reducers/index.js"],"names":["combineReducers","errors","loginMode","user","posts","resources","members","profile","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,WAAW,GAAGR,eAAe,CAAC;AAClCC,EAAAA,MADkC;AAC1B;AACRC,EAAAA,SAFkC;AAEvB;AACXC,EAAAA,IAHkC;AAG5B;AACNG,EAAAA,OAJkC;AAKlCF,EAAAA,KALkC;AAK3B;AACPC,EAAAA,SANkC;AAOlCE,EAAAA;AAPkC,CAAD,CAAnC;AAUA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from \"redux\";\nimport errors from \"./errorsReducer\";\nimport loginMode from \"./loginModeReducer\";\nimport user from \"./userReducer\";\nimport posts from \"./postsReducer\";\nimport resources from \"./resourcesReducer\";\nimport members from \"./membersReducer\";\nimport profile from \"./profileReducer\";\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and email if someone is logged in\n  members,\n  posts, // contains all post reducers\n  resources,\n  profile,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}