{"ast":null,"code":"var _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/Profile/Profile.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport PostItem from \"../PostList/PostItem/PostItem\";\nimport { Link, Heading, Button, Icon } from \"@chakra-ui/core\";\nimport { VARIANT_COLOR } from \"../ThemSelector/ThemeSelector\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.getProfile = () => {\n      this.props.dispatch({\n        type: \"FETCH_PROFILE\"\n      });\n    };\n\n    this.getUserLinks = () => {\n      this.props.dispatch({\n        type: \"FETCH_USER_LINKS\"\n      });\n    };\n\n    this.getUserPosts = () => {\n      this.props.dispatch({\n        type: \"FETCH_USER_POSTS\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getProfile();\n    this.getUserLinks();\n    this.getUserPosts();\n  }\n\n  render() {\n    const _this$props = this.props,\n          user = _this$props.user,\n          profile = _this$props.profile,\n          profileData = _this$props.profileData,\n          profileLinks = _this$props.profileLinks;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      className: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, user.first_name, \" \", user.last_name), /*#__PURE__*/React.createElement(Button, {\n      variantColor: VARIANT_COLOR,\n      mb: 4,\n      onClick: this.editProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, profileData.bio), profileLinks.map(profileLink => {\n      return /*#__PURE__*/React.createElement(Link, {\n        href: \"\".concat(profileLink.profile_url),\n        isExternal: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, profileLink.platform_name, \" \", /*#__PURE__*/React.createElement(Icon, {\n        name: \"external-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 43\n        }\n      }));\n    }), profile.profilePosts.map(postItem => {\n      return /*#__PURE__*/React.createElement(PostItem, {\n        key: postItem.id,\n        postItem: postItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 18\n        }\n      });\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  profile: state.profile,\n  profileData: state.profile.profile[0],\n  profileLinks: state.profile.profileLinks\n});\n\nexport default withRouter(connect(mapStateToProps)(Profile));","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/Profile/Profile.js"],"names":["React","Component","connect","withRouter","PostItem","Link","Heading","Button","Icon","VARIANT_COLOR","Profile","state","getProfile","props","dispatch","type","getUserLinks","getUserPosts","componentDidMount","render","user","profile","profileData","profileLinks","first_name","last_name","editProfile","bio","map","profileLink","profile_url","platform_name","profilePosts","postItem","id","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport PostItem from \"../PostList/PostItem/PostItem\";\nimport { Link, Heading, Button, Icon } from \"@chakra-ui/core\";\nimport { VARIANT_COLOR } from \"../ThemSelector/ThemeSelector\";\n\nclass Profile extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.getProfile();\n    this.getUserLinks();\n    this.getUserPosts();\n  }\n\n  getProfile = () => {\n    this.props.dispatch({\n      type: \"FETCH_PROFILE\",\n    });\n  };\n\n  getUserLinks = () => {\n    this.props.dispatch({\n      type: \"FETCH_USER_LINKS\",\n    });\n  };\n\n  getUserPosts = () => {\n    this.props.dispatch({\n      type: \"FETCH_USER_POSTS\",\n    });\n  };\n\n  render() {\n    const { user, profile, profileData, profileLinks } = this.props;\n    return (\n      <div className=\"content\">\n        <Heading className=\"profile\">\n          {user.first_name} {user.last_name}\n        </Heading>\n        <Button variantColor={VARIANT_COLOR} mb={4} onClick={this.editProfile}>\n          Edit Profile\n        </Button>\n        <p className=\"profile\">{profileData.bio}</p>\n        {profileLinks.map((profileLink) => {\n          return (\n            <Link href={`${profileLink.profile_url}`} isExternal>\n              {profileLink.platform_name} <Icon name=\"external-link\" />\n            </Link>\n          );\n        })}\n        {profile.profilePosts.map((postItem) => {\n          return <PostItem key={postItem.id} postItem={postItem} />;\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  profile: state.profile,\n  profileData: state.profile.profile[0],\n  profileLinks: state.profile.profileLinks,\n});\n\nexport default withRouter(connect(mapStateToProps)(Profile));\n"]},"metadata":{},"sourceType":"module"}