{"ast":null,"code":"import { combineReducers } from \"redux\"; // Used to store posts returned from the server\n\nconst posts = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_POSTS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n}; // Used to store the detail of the post that is selected\n\n\nconst detail = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_DETAIL\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n}; // Used to store the current post that is selected\n\n\nconst currentpost = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_CURRENT_POST\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst currentId = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_CURRENT_ID\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n}; // make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\n\n\nexport default combineReducers({\n  posts,\n  detail,\n  currentId,\n  currentpost\n});","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo-spike/edn-spike/src/redux/reducers/postsReducer.js"],"names":["combineReducers","posts","state","action","type","payload","detail","currentpost","currentId"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD,C,CASA;;;AACA,MAAMI,MAAM,GAAG,CAACJ,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD,C,CASA;;;AACA,MAAMK,WAAW,GAAG,CAACL,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,MAAMM,SAAS,GAAG,CAACN,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD,C,CASA;AACA;AACA;;;AACA,eAAeF,eAAe,CAAC;AAC7BC,EAAAA,KAD6B;AAE7BK,EAAAA,MAF6B;AAG7BE,EAAAA,SAH6B;AAI7BD,EAAAA;AAJ6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\n\n// Used to store posts returned from the server\nconst posts = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_POSTS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// Used to store the detail of the post that is selected\nconst detail = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_DETAIL\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// Used to store the current post that is selected\nconst currentpost = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_CURRENT_POST\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst currentId = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_CURRENT_ID\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  posts,\n  detail,\n  currentId,\n  currentpost,\n});\n"]},"metadata":{},"sourceType":"module"}