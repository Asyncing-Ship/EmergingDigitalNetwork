{"ast":null,"code":"var _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { Flex, Box, Button, Heading, Text, IconButton } from \"@chakra-ui/core\";\n\nclass PostItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getPostAuthor = () => {\n      console.log(\"In postItem getPostAuthor\");\n\n      try {\n        this.props.dispatch({\n          type: \"FETCH_POST_AUTHOR\",\n          payload: this.props.postItem.user_id\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.deletePost = event => {\n      console.log(\"In delete\");\n      this.props.dispatch({\n        type: \"DELETE_POST\",\n        payload: event.target.id\n      });\n\n      try {\n        this.props.dispatch({\n          type: \"FETCH_POSTS\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.props.history.push(\"/\");\n    };\n\n    this.addPostComment = event => {};\n\n    this.addPostLike = event => {};\n\n    this.editPost = event => {};\n  }\n\n  componentDidMount() {\n    this.getPostAuthor();\n  }\n\n  render() {\n    const postUser = this.props.postItem.id;\n    const memberArray = this.props.members.members.filter(x => x.id === postUser);\n    console.log(memberArray);\n\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        textAlign: \"center\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        mb: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Heading, {\n        as: \"h5\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, this.props.member), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_body), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, this.props.postItem.likes), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, \"Comment\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.editPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.deletePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, \"Delete\")));\n    } else {\n      return /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        textAlign: \"center\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_body), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, this.props.postItem.likes), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, \"Comment\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, \"Like\")));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  members: state.members\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js"],"names":["React","Component","withRouter","connect","Flex","Box","Button","Heading","Text","IconButton","PostItem","getPostAuthor","console","log","props","dispatch","type","payload","postItem","user_id","error","deletePost","event","target","id","history","push","addPostComment","addPostLike","editPost","componentDidMount","render","postUser","memberArray","members","filter","x","user","post_title","member","post_body","likes","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\n\nimport { connect } from \"react-redux\";\nimport { Flex, Box, Button, Heading, Text, IconButton } from \"@chakra-ui/core\";\n\nclass PostItem extends Component {\n  componentDidMount() {\n    this.getPostAuthor();\n  }\n\n  getPostAuthor = () => {\n    console.log(\"In postItem getPostAuthor\");\n    try {\n      this.props.dispatch({\n        type: \"FETCH_POST_AUTHOR\",\n        payload: this.props.postItem.user_id,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // addPostComment = () => {\n  //   //\n  // };\n\n  // addPostLike = () => {\n  //   //\n  // };\n\n  // Axios.delete(`/api/posts/${event.target.id}`)\n\n  deletePost = (event) => {\n    console.log(\"In delete\");\n    this.props.dispatch({ type: \"DELETE_POST\", payload: event.target.id });\n    try {\n      this.props.dispatch({ type: \"FETCH_POSTS\" });\n    } catch (error) {\n      console.log(error);\n    }\n    this.props.history.push(\"/\");\n  };\n\n  addPostComment = (event) => {};\n\n  addPostLike = (event) => {};\n\n  editPost = (event) => {};\n\n  render() {\n    const postUser = this.props.postItem.id;\n    const memberArray = this.props.members.members.filter(\n      (x) => x.id === postUser\n    );\n    console.log(memberArray);\n\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return (\n        <Flex width=\"full\" justifyContent=\"center\">\n          <Box\n            m={4}\n            textAlign=\"center\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            px={4}\n            width=\"full\"\n            maxWidth=\"100%\"\n            textAlign=\"center\"\n            boxShadow=\"lg\"\n            p={4}\n            py={8}\n          >\n            {/* <div className=\"postItem\"> */}\n            <Heading as=\"h3\" size=\"lg\" mb={2}>\n              {this.props.postItem.post_title}\n            </Heading>\n            <Heading as=\"h5\" size=\"sm\">\n              {this.props.member}\n            </Heading>\n            <Text>{this.props.postItem.post_body}</Text>\n            <Text>{this.props.postItem.likes}</Text>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostComment}\n            >\n              Comment\n            </Button>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostLike}\n            >\n              Like\n            </Button>\n            <Button m={1} id={this.props.postItem.id} onClick={this.editPost}>\n              Edit\n            </Button>\n            <Button m={1} id={this.props.postItem.id} onClick={this.deletePost}>\n              Delete\n            </Button>\n          </Box>\n        </Flex>\n      );\n    } else {\n      return (\n        <Flex width=\"full\" justifyContent=\"center\">\n          <Box\n            m={4}\n            textAlign=\"center\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            px={4}\n            width=\"full\"\n            maxWidth=\"100%\"\n            textAlign=\"center\"\n            boxShadow=\"lg\"\n            p={4}\n            py={8}\n          >\n            <Heading as=\"h3\" size=\"lg\">\n              {this.props.postItem.post_title}\n            </Heading>\n            <Text>{this.props.postItem.post_body}</Text>\n            <p>{this.props.postItem.likes}</p>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostComment}\n            >\n              Comment\n            </Button>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostLike}\n            >\n              Like\n            </Button>\n          </Box>\n        </Flex>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  members: state.members,\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));\n"]},"metadata":{},"sourceType":"module"}