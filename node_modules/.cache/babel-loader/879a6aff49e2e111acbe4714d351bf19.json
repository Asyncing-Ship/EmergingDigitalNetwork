{"ast":null,"code":"var _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Flex, Box, Button, Heading, Text, IconButton, Stack } from \"@chakra-ui/core\";\nimport AddComment from \"../../Comment/AddComment\";\nimport Thread from \"../../Thread/PostThread\";\nimport Axios from \"axios\";\n\nclass PostItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: 0\n    };\n\n    this.deletePost = event => {\n      console.log(\"In delete\");\n      this.props.dispatch({\n        type: \"DELETE_POST\",\n        payload: event.target.id\n      });\n\n      try {\n        this.props.dispatch({\n          type: \"FETCH_POSTS\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.props.history.push(\"/\");\n    };\n\n    this.addPostComment = event => {};\n\n    this.addPostLike = event => {};\n\n    this.editPost = event => {};\n  }\n\n  // this.props.dispatch({\n  //   type: \"FETCH_POST_COMMENTS\",\n  //   payload: this.props.postItem.id,\n  // });\n  componentDidMount() {\n    Axios.get(\"api/posts/comments/\".concat(this.props.postItem.id)).then(result => {\n      console.table(result.data);\n      this.setState({\n        comments: result.data\n      });\n    }).catch(error => console.log(\"error getting comments\", error));\n  } // addPostLike = () => {\n  //   //\n  // };\n  // Axios.delete(`/api/posts/${event.target.id}`)\n\n\n  render() {\n    const setDetails = () => {\n      const SET_POST_DETAIL = {\n        comments: this.state.comments,\n        post: this.props.postItem\n      };\n      this.props.dispatch({\n        type: \"SET_POST_DETAIL\",\n        payload: SET_POST_DETAIL\n      }), this.history.push(\"/posts/\".concat(this.props.postItem.id));\n    };\n\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/posts/\".concat(this.props.postItem.id),\n        component: Thread,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        mb: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, \"By\"), /*#__PURE__*/React.createElement(Heading, {\n        mb: 2,\n        as: \"h5\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, this.props.postItem.first_name), /*#__PURE__*/React.createElement(Text, {\n        mb: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, this.props.postItem.post_body), /*#__PURE__*/React.createElement(Stack, {\n        isInline: true,\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, this.props.postItem.likes, \" Likes\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/posts/\".concat(this.props.postItem.id),\n        p: 2,\n        onClick: setDetails.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, this.state.comments.length, \" Comments\")), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.editPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.deletePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, \"Delete\"), /*#__PURE__*/React.createElement(AddComment, {\n        postItem: this.props.postItem,\n        userID: this.props.user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/posts/\".concat(this.props.postItem.id),\n        component: /*#__PURE__*/React.createElement(Thread, {\n          postItem: this.props.postItem,\n          comments: this.state.comments,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }, \"By\"), /*#__PURE__*/React.createElement(Heading, {\n        mb: 2,\n        as: \"h5\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }\n      }, this.props.postItem.first_name), /*#__PURE__*/React.createElement(Stack, {\n        isInline: true,\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, this.props.postItem.likes, \" Likes\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/posts/\".concat(this.props.postItem.id),\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, this.state.comments.length, \" Comments\")), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(AddComment, {\n        postItem: this.props.postItem,\n        userID: this.props.user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js"],"names":["React","Component","withRouter","BrowserRouter","Router","Route","Link","connect","Flex","Box","Button","Heading","Text","IconButton","Stack","AddComment","Thread","Axios","PostItem","state","comments","deletePost","event","console","log","props","dispatch","type","payload","target","id","error","history","push","addPostComment","addPostLike","editPost","componentDidMount","get","postItem","then","result","table","data","setState","catch","render","setDetails","SET_POST_DETAIL","post","user","user_id","post_title","first_name","post_body","likes","bind","length","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Button,\n  Heading,\n  Text,\n  IconButton,\n  Stack,\n} from \"@chakra-ui/core\";\nimport AddComment from \"../../Comment/AddComment\";\nimport Thread from \"../../Thread/PostThread\";\nimport Axios from \"axios\";\n\nclass PostItem extends Component {\n  state = {\n    comments: 0,\n  };\n\n  // this.props.dispatch({\n  //   type: \"FETCH_POST_COMMENTS\",\n  //   payload: this.props.postItem.id,\n  // });\n\n  componentDidMount() {\n    Axios.get(`api/posts/comments/${this.props.postItem.id}`)\n      .then((result) => {\n        console.table(result.data);\n        this.setState({\n          comments: result.data,\n        });\n      })\n      .catch((error) => console.log(\"error getting comments\", error));\n  }\n\n  // addPostLike = () => {\n  //   //\n  // };\n\n  // Axios.delete(`/api/posts/${event.target.id}`)\n\n  deletePost = (event) => {\n    console.log(\"In delete\");\n    this.props.dispatch({ type: \"DELETE_POST\", payload: event.target.id });\n    try {\n      this.props.dispatch({ type: \"FETCH_POSTS\" });\n    } catch (error) {\n      console.log(error);\n    }\n    this.props.history.push(\"/\");\n  };\n\n  addPostComment = (event) => {};\n\n  addPostLike = (event) => {};\n\n  editPost = (event) => {};\n\n  render() {\n    const setDetails = () => {\n      const SET_POST_DETAIL = {\n        comments: this.state.comments,\n        post: this.props.postItem,\n      };\n      this.props.dispatch({\n        type: \"SET_POST_DETAIL\",\n        payload: SET_POST_DETAIL,\n      }),\n        this.history.push(`/posts/${this.props.postItem.id}`);\n    };\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return (\n        <div>\n          <Router>\n            <div>\n              <Route\n                exact\n                path={`/posts/${this.props.postItem.id}`}\n                component={Thread}\n              />\n            </div>\n          </Router>\n          <Flex width=\"full\" justifyContent=\"center\">\n            <Box\n              m={4}\n              textAlign=\"center\"\n              borderWidth={1}\n              borderRadius=\"lg\"\n              px={4}\n              width=\"full\"\n              maxWidth=\"100%\"\n              boxShadow=\"lg\"\n              p={4}\n              py={8}\n            >\n              {/* <div className=\"postItem\"> */}\n              <Heading as=\"h3\" size=\"lg\" mb={2}>\n                {this.props.postItem.post_title}\n              </Heading>\n              <Text>By</Text>\n              <Heading mb={2} as=\"h5\" size=\"sm\">\n                {this.props.postItem.first_name}\n              </Heading>\n              <Text mb={8}>{this.props.postItem.post_body}</Text>\n              <Stack isInline width=\"full\" justifyContent=\"center\">\n                <Text p={2}>{this.props.postItem.likes} Likes</Text>\n                <Link\n                  to={`/posts/${this.props.postItem.id}`}\n                  p={2}\n                  onClick={setDetails.bind(this)}\n                >\n                  {this.state.comments.length} Comments\n                </Link>\n              </Stack>\n              <Button\n                m={1}\n                id={this.props.postItem.id}\n                onClick={this.addPostLike}\n              >\n                Like\n              </Button>\n              <Button m={1} id={this.props.postItem.id} onClick={this.editPost}>\n                Edit\n              </Button>\n              <Button\n                m={1}\n                id={this.props.postItem.id}\n                onClick={this.deletePost}\n              >\n                Delete\n              </Button>\n              <AddComment\n                postItem={this.props.postItem}\n                userID={this.props.user.id}\n              />\n            </Box>\n          </Flex>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Router>\n            <div>\n              <Route\n                exact\n                path={`/posts/${this.props.postItem.id}`}\n                component={\n                  <Thread\n                    postItem={this.props.postItem}\n                    comments={this.state.comments}\n                  />\n                }\n              />\n            </div>\n          </Router>\n          <Flex width=\"full\" justifyContent=\"center\">\n            <Box\n              m={4}\n              textAlign=\"center\"\n              borderWidth={1}\n              borderRadius=\"lg\"\n              px={4}\n              width=\"full\"\n              maxWidth=\"100%\"\n              boxShadow=\"lg\"\n              p={4}\n              py={8}\n            >\n              <Heading as=\"h3\" size=\"lg\">\n                {this.props.postItem.post_title}\n              </Heading>\n              <Text>By</Text>\n              <Heading mb={2} as=\"h5\" size=\"sm\">\n                {this.props.postItem.first_name}\n              </Heading>\n              <Stack isInline width=\"full\" justifyContent=\"center\">\n                <Text p={2}>{this.props.postItem.likes} Likes</Text>\n                <Link to={`/posts/${this.props.postItem.id}`} p={2}>\n                  {this.state.comments.length} Comments\n                </Link>\n              </Stack>\n              <Button\n                m={1}\n                id={this.props.postItem.id}\n                onClick={this.addPostLike}\n              >\n                Like\n              </Button>\n              <AddComment\n                postItem={this.props.postItem}\n                userID={this.props.user.id}\n              />\n            </Box>\n          </Flex>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));\n"]},"metadata":{},"sourceType":"module"}