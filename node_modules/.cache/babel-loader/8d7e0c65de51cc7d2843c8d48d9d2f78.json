{"ast":null,"code":"import _regeneratorRuntime from \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchProfile),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchUserLinks),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchUserPosts),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(profileSaga);\n\nimport Axios from \"axios\";\nimport { put, takeEvery } from \"redux-saga/effects\"; // function to get Posts\n\nfunction fetchProfile(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchProfile$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.prev = 0;\n        _context.next = 3;\n        return Axios.get(\"/api/profile/\".concat(action.payload));\n\n      case 3:\n        response = _context.sent;\n        _context.next = 6;\n        return put({\n          type: \"SET_PROFILE\",\n          payload: response.data\n        });\n\n      case 6:\n        _context.next = 11;\n        break;\n\n      case 8:\n        _context.prev = 8;\n        _context.t0 = _context[\"catch\"](0);\n        // console.log('Error fetching Posts', error);\n        alert(\"unable to get Profile from server\");\n\n      case 11:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction fetchUserLinks(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchUserLinks$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.prev = 0;\n        _context2.next = 3;\n        return Axios.get(\"/api/profile/links/\".concat(action.payload));\n\n      case 3:\n        response = _context2.sent;\n        _context2.next = 6;\n        return put({\n          type: \"SET_USER_LINKS\",\n          payload: response.data\n        });\n\n      case 6:\n        _context2.next = 11;\n        break;\n\n      case 8:\n        _context2.prev = 8;\n        _context2.t0 = _context2[\"catch\"](0);\n        // console.log('Error fetching Posts', error);\n        alert(\"unable to get links from server\");\n\n      case 11:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction fetchUserPosts(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchUserPosts$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        _context3.prev = 0;\n        _context3.next = 3;\n        return Axios.get(\"/api/profile/posts/\".concat(action.payload));\n\n      case 3:\n        response = _context3.sent;\n        _context3.next = 6;\n        return put({\n          type: \"SET_USER_POSTS\",\n          payload: response.data\n        });\n\n      case 6:\n        _context3.next = 11;\n        break;\n\n      case 8:\n        _context3.prev = 8;\n        _context3.t0 = _context3[\"catch\"](0);\n        // console.log('Error fetching Posts', error);\n        alert(\"unable to get links from server\");\n\n      case 11:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction profileSaga() {\n  return _regeneratorRuntime.wrap(function profileSaga$(_context4) {\n    while (1) switch (_context4.prev = _context4.next) {\n      case 0:\n        _context4.next = 2;\n        return takeEvery(\"FETCH_PROFILE\", fetchProfile);\n\n      case 2:\n        _context4.next = 4;\n        return takeEvery(\"FETCH_USER_LINKS\", fetchUserLinks);\n\n      case 4:\n        _context4.next = 6;\n        return takeEvery(\"FETCH_USER_POSTS\", fetchUserPosts);\n\n      case 6:\n      case \"end\":\n        return _context4.stop();\n    }\n  }, _marked4);\n}\n\nexport default profileSaga;","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/redux/sagas/profileSaga.js"],"names":["fetchProfile","fetchUserLinks","fetchUserPosts","profileSaga","Axios","put","takeEvery","action","get","payload","response","type","data","alert"],"mappings":";;oDAIUA,Y;qDAcAC,c;qDAcAC,c;qDAcAC,W;;AA9CV,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B,C,CAEA;;AACA,SAAUN,YAAV,CAAuBO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKqB,eAAMH,KAAK,CAACI,GAAN,wBAA0BD,MAAM,CAACE,OAAjC,EAAN;;AALrB;AAKUC,QAAAA,QALV;AAAA;AAOI,eAAML,GAAG,CAAC;AAAEM,UAAAA,IAAI,EAAE,aAAR;AAAuBF,UAAAA,OAAO,EAAEC,QAAQ,CAACE;AAAzC,SAAD,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASI;AACAC,QAAAA,KAAK,CAAC,mCAAD,CAAL;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUZ,cAAV,CAAyBM,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKqB,eAAMH,KAAK,CAACI,GAAN,8BAAgCD,MAAM,CAACE,OAAvC,EAAN;;AALrB;AAKUC,QAAAA,QALV;AAAA;AAOI,eAAML,GAAG,CAAC;AAAEM,UAAAA,IAAI,EAAE,gBAAR;AAA0BF,UAAAA,OAAO,EAAEC,QAAQ,CAACE;AAA5C,SAAD,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASI;AACAC,QAAAA,KAAK,CAAC,iCAAD,CAAL;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUX,cAAV,CAAyBK,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKqB,eAAMH,KAAK,CAACI,GAAN,8BAAgCD,MAAM,CAACE,OAAvC,EAAN;;AALrB;AAKUC,QAAAA,QALV;AAAA;AAOI,eAAML,GAAG,CAAC;AAAEM,UAAAA,IAAI,EAAE,gBAAR;AAA0BF,UAAAA,OAAO,EAAEC,QAAQ,CAACE;AAA5C,SAAD,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASI;AACAC,QAAAA,KAAK,CAAC,iCAAD,CAAL;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUV,WAAV;AAAA;AAAA;AAAA;AAAA;AACE,eAAMG,SAAS,CAAC,eAAD,EAAkBN,YAAlB,CAAf;;AADF;AAAA;AAEE,eAAMM,SAAS,CAAC,kBAAD,EAAqBL,cAArB,CAAf;;AAFF;AAAA;AAGE,eAAMK,SAAS,CAAC,kBAAD,EAAqBJ,cAArB,CAAf;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeC,WAAf","sourcesContent":["import Axios from \"axios\";\nimport { put, takeEvery } from \"redux-saga/effects\";\n\n// function to get Posts\nfunction* fetchProfile(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    const response = yield Axios.get(`/api/profile/${action.payload}`);\n    // const result = yield call(axios.get, '/post');\n    yield put({ type: \"SET_PROFILE\", payload: response.data });\n  } catch (error) {\n    // console.log('Error fetching Posts', error);\n    alert(\"unable to get Profile from server\");\n  }\n}\n\nfunction* fetchUserLinks(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    const response = yield Axios.get(`/api/profile/links/${action.payload}`);\n    // const result = yield call(axios.get, '/post');\n    yield put({ type: \"SET_USER_LINKS\", payload: response.data });\n  } catch (error) {\n    // console.log('Error fetching Posts', error);\n    alert(\"unable to get links from server\");\n  }\n}\n\nfunction* fetchUserPosts(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    const response = yield Axios.get(`/api/profile/posts/${action.payload}`);\n    // const result = yield call(axios.get, '/post');\n    yield put({ type: \"SET_USER_POSTS\", payload: response.data });\n  } catch (error) {\n    // console.log('Error fetching Posts', error);\n    alert(\"unable to get links from server\");\n  }\n}\n\nfunction* profileSaga() {\n  yield takeEvery(\"FETCH_PROFILE\", fetchProfile);\n  yield takeEvery(\"FETCH_USER_LINKS\", fetchUserLinks);\n  yield takeEvery(\"FETCH_USER_POSTS\", fetchUserPosts);\n}\n\nexport default profileSaga;\n"]},"metadata":{},"sourceType":"module"}