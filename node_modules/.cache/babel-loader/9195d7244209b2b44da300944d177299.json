{"ast":null,"code":"var _jsxFileName = \"/home/scoundrel/Desktop/eda-solo-spike/edn-spike/src/Components/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.login = event => {\n      event.preventDefault();\n\n      if (this.state.email && this.state.password) {\n        this.props.dispatch({\n          type: \"LOGIN\",\n          payload: {\n            email: this.state.email,\n            password: this.state.password\n          }\n        });\n      } else {\n        this.props.dispatch({\n          type: \"LOGIN_INPUT_ERROR\"\n        });\n      }\n    };\n\n    this.handleInputChangeFor = propertyName => event => {\n      this.setState({\n        [propertyName]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content input-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, this.props.errors.loginMessage && /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"alert\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, this.props.errors.loginMessage), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.email,\n      placeholder: \"Email\",\n      onChange: this.handleInputChangeFor(\"email\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      placeholder: \"Password\",\n      onChange: this.handleInputChangeFor(\"password\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"log-in btn\",\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Log In\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"or\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"link-button\",\n      onClick: () => {\n        this.props.dispatch({\n          type: \"SET_TO_REGISTER_MODE\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Register\"));\n  }\n\n} // Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\n\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo-spike/edn-spike/src/Components/Login/Login.js"],"names":["React","Component","connect","Login","state","email","password","login","event","preventDefault","props","dispatch","type","payload","handleInputChangeFor","propertyName","setState","target","value","render","errors","loginMessage","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.email && this.state.password) {\n      this.props.dispatch({\n        type: \"LOGIN\",\n        payload: {\n          email: this.state.email,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: \"LOGIN_INPUT_ERROR\" });\n    }\n  }; // end login\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"content input-form\">\n        {this.props.errors.loginMessage && (\n          <h2 className=\"alert\" role=\"alert\">\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login}>\n          <div>\n            <label htmlFor=\"email\">\n              <input\n                type=\"text\"\n                name=\"email\"\n                value={this.state.email}\n                placeholder=\"Email\"\n                onChange={this.handleInputChangeFor(\"email\")}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                placeholder=\"Password\"\n                onChange={this.handleInputChangeFor(\"password\")}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"log-in btn\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n          </div>\n        </form>\n        <p>or</p>\n        <button\n          type=\"button\"\n          className=\"link-button\"\n          onClick={() => {\n            this.props.dispatch({ type: \"SET_TO_REGISTER_MODE\" });\n          }}\n        >\n          Register\n        </button>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}