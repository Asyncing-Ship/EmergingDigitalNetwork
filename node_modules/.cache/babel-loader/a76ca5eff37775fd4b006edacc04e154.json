{"ast":null,"code":"import _regeneratorRuntime from \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPostComment),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addResourceComment),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchPostComments),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(commentsSaga);\n\nimport { takeEvery, put } from \"redux-saga/effects\";\n\nconst _require = require(\"axios\"),\n      Axios = _require.default; // function to add Post Comments\n\n\nfunction addPostComment(action) {\n  return _regeneratorRuntime.wrap(function addPostComment$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.prev = 0;\n        _context.next = 3;\n        return Axios.post(\"/api/posts/comments\", action.payload);\n\n      case 3:\n        _context.next = 8;\n        break;\n\n      case 5:\n        _context.prev = 5;\n        _context.t0 = _context[\"catch\"](0);\n        // console.log('Error fetching Posts', error);\n        alert(\"unable to add new Post Comment to server\", _context.t0);\n\n      case 8:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked, null, [[0, 5]]);\n} // function to add Resource Comments\n\n\nfunction addResourceComment(action) {\n  return _regeneratorRuntime.wrap(function addResourceComment$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.prev = 0;\n        _context2.next = 3;\n        return Axios.post(\"/api/resources/comments\", action.payload);\n\n      case 3:\n        _context2.next = 8;\n        break;\n\n      case 5:\n        _context2.prev = 5;\n        _context2.t0 = _context2[\"catch\"](0);\n        // console.log('Error fetching Posts', error);\n        alert(\"unable to add new Resource Comment to server\", _context2.t0);\n\n      case 8:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _marked2, null, [[0, 5]]);\n}\n\nfunction fetchPostComments(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchPostComments$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        _context3.prev = 0;\n        _context3.next = 3;\n        return Axios.get(\"/posts/comments/\".concat(action.payload));\n\n      case 3:\n        response = _context3.sent;\n        _context3.next = 6;\n        return put({\n          type: \"SET_POST_COMMENTS\",\n          payload: response.data\n        });\n\n      case 6:\n        _context3.next = 11;\n        break;\n\n      case 8:\n        _context3.prev = 8;\n        _context3.t0 = _context3[\"catch\"](0);\n        alert(\"Unable to get comments from server\");\n\n      case 11:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction commentsSaga() {\n  return _regeneratorRuntime.wrap(function commentsSaga$(_context4) {\n    while (1) switch (_context4.prev = _context4.next) {\n      case 0:\n        _context4.next = 2;\n        return takeEvery(\"SUBMIT_POST_COMMENT\", addPostComment);\n\n      case 2:\n        _context4.next = 4;\n        return takeEvery(\"SUBMIT_RESOURCE_COMMENT\", addResourceComment);\n\n      case 4:\n        _context4.next = 6;\n        return takeEvery(\"FETCH_POST_COMMENTS\", fetchPostComments);\n\n      case 6:\n      case \"end\":\n        return _context4.stop();\n    }\n  }, _marked4);\n}\n\nexport default commentsSaga;","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/redux/sagas/commentsSaga.js"],"names":["addPostComment","addResourceComment","fetchPostComments","commentsSaga","takeEvery","put","require","Axios","default","action","post","payload","alert","get","response","type","data"],"mappings":";;oDAKUA,c;qDAaAC,kB;qDAYAC,iB;qDAUAC,Y;;AAxCV,SAASC,SAAT,EAAoBC,GAApB,QAA+B,oBAA/B;;iBAE2BC,OAAO,CAAC,OAAD,C;MAAjBC,K,YAATC,O,EAER;;;AACA,SAAUR,cAAV,CAAyBS,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAKI,eAAMF,KAAK,CAACG,IAAN,CAAW,qBAAX,EAAkCD,MAAM,CAACE,OAAzC,CAAN;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOI;AACAC,QAAAA,KAAK,CAAC,0CAAD,cAAL;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAYA;;;AACA,SAAUX,kBAAV,CAA6BQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAKI,eAAMF,KAAK,CAACG,IAAN,CAAW,yBAAX,EAAsCD,MAAM,CAACE,OAA7C,CAAN;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOI;AACAC,QAAAA,KAAK,CAAC,8CAAD,eAAL;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAUV,iBAAV,CAA4BO,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,eAAMF,KAAK,CAACM,GAAN,2BAA6BJ,MAAM,CAACE,OAApC,EAAN;;AAFrB;AAEUG,QAAAA,QAFV;AAAA;AAII,eAAMT,GAAG,CAAC;AAAEU,UAAAA,IAAI,EAAE,mBAAR;AAA6BJ,UAAAA,OAAO,EAAEG,QAAQ,CAACE;AAA/C,SAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMIJ,QAAAA,KAAK,CAAC,oCAAD,CAAL;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUT,YAAV;AAAA;AAAA;AAAA;AAAA;AACE,eAAMC,SAAS,CAAC,qBAAD,EAAwBJ,cAAxB,CAAf;;AADF;AAAA;AAEE,eAAMI,SAAS,CAAC,yBAAD,EAA4BH,kBAA5B,CAAf;;AAFF;AAAA;AAGE,eAAMG,SAAS,CAAC,qBAAD,EAAwBF,iBAAxB,CAAf;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeC,YAAf","sourcesContent":["import { takeEvery, put } from \"redux-saga/effects\";\n\nconst { default: Axios } = require(\"axios\");\n\n// function to add Post Comments\nfunction* addPostComment(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    yield Axios.post(\"/api/posts/comments\", action.payload);\n  } catch (error) {\n    // console.log('Error fetching Posts', error);\n    alert(\"unable to add new Post Comment to server\", error);\n  }\n}\n\n// function to add Resource Comments\nfunction* addResourceComment(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    yield Axios.post(\"/api/resources/comments\", action.payload);\n  } catch (error) {\n    // console.log('Error fetching Posts', error);\n    alert(\"unable to add new Resource Comment to server\", error);\n  }\n}\n\nfunction* fetchPostComments(action) {\n  try {\n    const response = yield Axios.get(`/posts/comments/${action.payload}`);\n\n    yield put({ type: \"SET_POST_COMMENTS\", payload: response.data });\n  } catch (error) {\n    alert(\"Unable to get comments from server\");\n  }\n}\n\nfunction* commentsSaga() {\n  yield takeEvery(\"SUBMIT_POST_COMMENT\", addPostComment);\n  yield takeEvery(\"SUBMIT_RESOURCE_COMMENT\", addResourceComment);\n  yield takeEvery(\"FETCH_POST_COMMENTS\", fetchPostComments);\n}\n\nexport default commentsSaga;\n"]},"metadata":{},"sourceType":"module"}