{"ast":null,"code":"import _regeneratorRuntime from \"/home/scoundrel/Desktop/eda-solo-spike/edn-spike/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchPosts),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchPostDetail),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(fetchCurrentPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(updatePost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(postsSaga);\n\nimport Axios from \"axios\";\nimport { put, takeEvery } from \"redux-saga/effects\"; // function to get Posts\n\nfunction fetchPosts(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchPosts$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.prev = 0;\n        _context.next = 3;\n        return Axios.get(\"/api/posts\");\n\n      case 3:\n        response = _context.sent;\n        _context.next = 6;\n        return put({\n          type: \"SET_POSTS\",\n          payload: response.data\n        });\n\n      case 6:\n        _context.next = 11;\n        break;\n\n      case 8:\n        _context.prev = 8;\n        _context.t0 = _context[\"catch\"](0);\n        // console.log('Error fetching Posts', error);\n        alert(\"unable to get Post from server\");\n\n      case 11:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked, null, [[0, 8]]);\n} // function to add Posts\n\n\nfunction addPost(action) {\n  return _regeneratorRuntime.wrap(function addPost$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.prev = 0;\n        _context2.next = 3;\n        return Axios.post(\"/api/posts\");\n\n      case 3:\n        _context2.next = 8;\n        break;\n\n      case 5:\n        _context2.prev = 5;\n        _context2.t0 = _context2[\"catch\"](0);\n        // console.log('Error fetching Posts', error);\n        alert(\"unable to add new Post to server\");\n\n      case 8:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _marked2, null, [[0, 5]]);\n} // function to get current Post\n\n\nfunction fetchPostDetail(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchPostDetail$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        _context3.prev = 0;\n        _context3.next = 3;\n        return Axios.get(\"/api/detail/\".concat(action.payload));\n\n      case 3:\n        response = _context3.sent;\n        _context3.next = 6;\n        return put({\n          type: \"SET_POST_DETAIL\",\n          payload: response.data\n        });\n\n      case 6:\n        _context3.next = 11;\n        break;\n\n      case 8:\n        _context3.prev = 8;\n        _context3.t0 = _context3[\"catch\"](0);\n        // console.log('Error fetching posts', error);\n        alert(\"Unable to get detail from server\");\n\n      case 11:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, _marked3, null, [[0, 8]]);\n} // function to get current Post\n\n\nfunction fetchCurrentPost(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchCurrentPost$(_context4) {\n    while (1) switch (_context4.prev = _context4.next) {\n      case 0:\n        _context4.prev = 0;\n        _context4.next = 3;\n        return Axios.get(\"/api/post/\".concat(action.payload));\n\n      case 3:\n        response = _context4.sent;\n        _context4.next = 6;\n        return put({\n          type: \"SET_CURRENT_POST\",\n          payload: response.data\n        });\n\n      case 6:\n        _context4.next = 11;\n        break;\n\n      case 8:\n        _context4.prev = 8;\n        _context4.t0 = _context4[\"catch\"](0);\n        // console.log('Error fetching posts', error);\n        alert(\"Unable to fetch current Post\");\n\n      case 11:\n      case \"end\":\n        return _context4.stop();\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction updatePost(action) {\n  return _regeneratorRuntime.wrap(function updatePost$(_context5) {\n    while (1) switch (_context5.prev = _context5.next) {\n      case 0:\n        _context5.prev = 0;\n        _context5.next = 3;\n        return Axios.put(\"/api/post/\".concat(action.payload.currentId), action.payload);\n\n      case 3:\n        _context5.next = 8;\n        break;\n\n      case 5:\n        _context5.prev = 5;\n        _context5.t0 = _context5[\"catch\"](0);\n        alert(\"Unable to update Post on server\", _context5.t0);\n\n      case 8:\n      case \"end\":\n        return _context5.stop();\n    }\n  }, _marked5, null, [[0, 5]]);\n}\n\nfunction postsSaga() {\n  return _regeneratorRuntime.wrap(function postsSaga$(_context6) {\n    while (1) switch (_context6.prev = _context6.next) {\n      case 0:\n        _context6.next = 2;\n        return takeEvery(\"FETCH_POSTS\", fetchPosts);\n\n      case 2:\n        _context6.next = 4;\n        return takeEvery(\"FETCH_POST_DETAIL\", fetchPostDetail);\n\n      case 4:\n        _context6.next = 6;\n        return takeEvery(\"UPDATE_POST\", updatePost);\n\n      case 6:\n        _context6.next = 8;\n        return takeEvery(\"FETCH_CURRENT_POST\", fetchCurrentPost);\n\n      case 8:\n        _context6.next = 10;\n        return takeEvery(\"ADD_POST\", addPost);\n\n      case 10:\n      case \"end\":\n        return _context6.stop();\n    }\n  }, _marked6);\n}\n\nexport default postsSaga;","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo-spike/edn-spike/src/redux/sagas/postsSaga.js"],"names":["fetchPosts","addPost","fetchPostDetail","fetchCurrentPost","updatePost","postsSaga","Axios","put","takeEvery","action","get","response","type","payload","data","alert","post","currentId"],"mappings":";;oDAIUA,U;qDAeAC,O;qDAaAC,e;qDAeAC,gB;qDAaAC,U;qDASAC,S;;AArEV,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B,C,CAEA;;AACA,SAAUR,UAAV,CAAqBS,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKqB,eAAMH,KAAK,CAACI,GAAN,CAAU,YAAV,CAAN;;AALrB;AAKUC,QAAAA,QALV;AAAA;AAOI,eAAMJ,GAAG,CAAC;AAAEK,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,OAAO,EAAEF,QAAQ,CAACG;AAAvC,SAAD,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASI;AACAC,QAAAA,KAAK,CAAC,gCAAD,CAAL;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAcA;;;AACA,SAAUd,OAAV,CAAkBQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAKI,eAAMH,KAAK,CAACU,IAAN,CAAW,YAAX,CAAN;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOI;AACAD,QAAAA,KAAK,CAAC,kCAAD,CAAL;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAYA;;;AACA,SAAUb,eAAV,CAA0BO,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKqB,eAAMH,KAAK,CAACI,GAAN,uBAAyBD,MAAM,CAACI,OAAhC,EAAN;;AALrB;AAKUF,QAAAA,QALV;AAAA;AAOI,eAAMJ,GAAG,CAAC;AAAEK,UAAAA,IAAI,EAAE,iBAAR;AAA2BC,UAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA7C,SAAD,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASI;AACAC,QAAAA,KAAK,CAAC,kCAAD,CAAL;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAcA;;;AACA,SAAUZ,gBAAV,CAA2BM,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKqB,eAAMH,KAAK,CAACI,GAAN,qBAAuBD,MAAM,CAACI,OAA9B,EAAN;;AALrB;AAKUF,QAAAA,QALV;AAAA;AAOI,eAAMJ,GAAG,CAAC;AAAEK,UAAAA,IAAI,EAAE,kBAAR;AAA4BC,UAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA9C,SAAD,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASI;AACAC,QAAAA,KAAK,CAAC,8BAAD,CAAL;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUX,UAAV,CAAqBK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,eAAMH,KAAK,CAACC,GAAN,qBAAuBE,MAAM,CAACI,OAAP,CAAeI,SAAtC,GAAmDR,MAAM,CAACI,OAA1D,CAAN;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKIE,QAAAA,KAAK,CAAC,iCAAD,eAAL;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUV,SAAV;AAAA;AAAA;AAAA;AAAA;AACE,eAAMG,SAAS,CAAC,aAAD,EAAgBR,UAAhB,CAAf;;AADF;AAAA;AAEE,eAAMQ,SAAS,CAAC,mBAAD,EAAsBN,eAAtB,CAAf;;AAFF;AAAA;AAGE,eAAMM,SAAS,CAAC,aAAD,EAAgBJ,UAAhB,CAAf;;AAHF;AAAA;AAIE,eAAMI,SAAS,CAAC,oBAAD,EAAuBL,gBAAvB,CAAf;;AAJF;AAAA;AAKE,eAAMK,SAAS,CAAC,UAAD,EAAaP,OAAb,CAAf;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeI,SAAf","sourcesContent":["import Axios from \"axios\";\nimport { put, takeEvery } from \"redux-saga/effects\";\n\n// function to get Posts\nfunction* fetchPosts(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    const response = yield Axios.get(\"/api/posts\");\n    // const result = yield call(axios.get, '/post');\n    yield put({ type: \"SET_POSTS\", payload: response.data });\n  } catch (error) {\n    // console.log('Error fetching Posts', error);\n    alert(\"unable to get Post from server\");\n  }\n}\n\n// function to add Posts\nfunction* addPost(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    yield Axios.post(\"/api/posts\");\n  } catch (error) {\n    // console.log('Error fetching Posts', error);\n    alert(\"unable to add new Post to server\");\n  }\n}\n\n// function to get current Post\nfunction* fetchPostDetail(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    const response = yield Axios.get(`/api/detail/${action.payload}`);\n    // const result = yield call(axios.get, '/post');\n    yield put({ type: \"SET_POST_DETAIL\", payload: response.data });\n  } catch (error) {\n    // console.log('Error fetching posts', error);\n    alert(\"Unable to get detail from server\");\n  }\n}\n\n// function to get current Post\nfunction* fetchCurrentPost(action) {\n  // wrap it all in try/catch\n  // yield axios\n  // dispatch the result with put!\n  try {\n    const response = yield Axios.get(`/api/post/${action.payload}`);\n    // const result = yield call(axios.get, '/post');\n    yield put({ type: \"SET_CURRENT_POST\", payload: response.data });\n  } catch (error) {\n    // console.log('Error fetching posts', error);\n    alert(\"Unable to fetch current Post\");\n  }\n}\nfunction* updatePost(action) {\n  //Update the post\n  try {\n    yield Axios.put(`/api/post/${action.payload.currentId}`, action.payload);\n  } catch (error) {\n    alert(\"Unable to update Post on server\", error);\n  }\n}\n\nfunction* postsSaga() {\n  yield takeEvery(\"FETCH_POSTS\", fetchPosts);\n  yield takeEvery(\"FETCH_POST_DETAIL\", fetchPostDetail);\n  yield takeEvery(\"UPDATE_POST\", updatePost);\n  yield takeEvery(\"FETCH_CURRENT_POST\", fetchCurrentPost);\n  yield takeEvery(\"ADD_POST\", addPost);\n}\n\nexport default postsSaga;\n"]},"metadata":{},"sourceType":"module"}