{"ast":null,"code":"var _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/Resources/Resources.js\";\nimport React, { Component } from \"react\";\nimport ResourceItem from \"./ResourceItem/ResourceItem\";\nimport { connect } from \"react-redux\";\nimport \"./Resources.css\";\nimport RightSide from \"../Sidebars/RightSibebar\";\n\nclass Resources extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.toNewResource = () => {\n      this.props.history.push(\"/add-resource\");\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: \"FETCH_RESOURCES\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RightSide, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toNewResource,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"Add Resource\"), this.props.resources.resources.map(resourceItem => {\n      return /*#__PURE__*/React.createElement(ResourceItem, {\n        key: resourceItem.id,\n        resourceItem: resourceItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      });\n    }));\n  }\n\n} // Makes our reducers available in our component\n\n\nconst mapStateToProps = state => {\n  return {\n    resources: state.resources\n  };\n};\n\nexport default connect(mapStateToProps)(Resources);","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/Resources/Resources.js"],"names":["React","Component","ResourceItem","connect","RightSide","Resources","toNewResource","props","history","push","componentDidMount","dispatch","type","render","resources","map","resourceItem","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAKhCK,aALgC,GAKhB,MAAM;AACpB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,eAAxB;AACD,KAP+B;AAAA;;AAChCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWI,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAApB;AACD;;AAMDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKP,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGG,KAAKC,KAAL,CAAWO,SAAX,CAAqBA,SAArB,CAA+BC,GAA/B,CAAoCC,YAAD,IAAkB;AACpD,0BACE,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,YAAY,CAACC,EAAhC;AAAoC,QAAA,YAAY,EAAED,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJA,CAHH,CADF;AAWD;;AArB+B,C,CAwBlC;;;AACA,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLL,IAAAA,SAAS,EAAEK,KAAK,CAACL;AADZ,GAAP;AAGD,CAJD;;AAMA,eAAeX,OAAO,CAACe,eAAD,CAAP,CAAyBb,SAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ResourceItem from \"./ResourceItem/ResourceItem\";\nimport { connect } from \"react-redux\";\nimport \"./Resources.css\";\nimport RightSide from \"../Sidebars/RightSibebar\";\n\nclass Resources extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: \"FETCH_RESOURCES\" });\n  }\n\n  toNewResource = () => {\n    this.props.history.push(\"/add-resource\");\n  };\n\n  render() {\n    return (\n      <div className=\"postList\">\n        <RightSide />\n        <button onClick={this.toNewResource}>Add Resource</button>\n        {this.props.resources.resources.map((resourceItem) => {\n          return (\n            <ResourceItem key={resourceItem.id} resourceItem={resourceItem} />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n// Makes our reducers available in our component\nconst mapStateToProps = (state) => {\n  return {\n    resources: state.resources,\n  };\n};\n\nexport default connect(mapStateToProps)(Resources);\n"]},"metadata":{},"sourceType":"module"}