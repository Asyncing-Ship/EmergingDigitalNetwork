{"ast":null,"code":"var _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Flex, Box, Button, Heading, Text, IconButton, Stack, Link } from \"@chakra-ui/core\";\nimport AddComment from \"../../Comment/AddComment\";\nimport Axios from \"axios\";\n\nclass PostItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: {\n        comments: 0\n      },\n      likes: 0,\n      displayThread: false\n    };\n\n    this.updateLikes = () => {\n      this.setState({\n        likes: this.props.postItem.likes\n      });\n    };\n\n    this.updateComments = () => {\n      Axios.get(\"api/posts/comments/\".concat(this.props.postItem.id)).then(result => {\n        console.table(result.data);\n        this.setState({\n          comments: {\n            comments: result.data\n          }\n        });\n      }).catch(error => console.log(\"error getting comments\", error));\n    };\n\n    this.switchDisplay = () => {\n      if (this.state.displayThread === true) {\n        this.setState({\n          displayThread: false\n        });\n      } else {\n        this.setState({\n          displayThread: true\n        });\n      }\n    };\n\n    this.addPostLike = event => {\n      const payObj = {\n        id: event.target.id\n      };\n      console.log(payObj);\n      console.log(this.props.postItem.id);\n      this.setState({\n        likes: this.props.postItem.likes + 1\n      });\n      this.props.dispatch({\n        type: \"ADD_POST_LIKE\",\n        payload: payObj\n      });\n    };\n\n    this.deletePost = event => {\n      console.log(\"In delete\");\n      this.props.dispatch({\n        type: \"DELETE_POST\",\n        payload: event.target.id\n      });\n\n      try {\n        this.props.dispatch({\n          type: \"FETCH_POSTS\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.props.history.push(\"/\");\n    };\n\n    this.addPostComment = event => {};\n\n    this.editPost = event => {};\n  }\n\n  componentDidMount() {\n    this.updateComments();\n    this.updateLikes();\n  }\n\n  render() {\n    const commentOrcomments = () => {\n      if (this.state.comments.comments.length === 1) {\n        return \"Comment\";\n      } else {\n        return \"Comments\";\n      }\n    };\n\n    const likeOrLikes = () => {\n      if (this.state.likes === 1) {\n        return \"Like\";\n      } else {\n        return \"Likes\";\n      }\n    };\n\n    const viewOrClose = () => {\n      if (this.state.displayThread) {\n        return \"Close Thread\";\n      } else {\n        return \"View Thread\";\n      }\n    };\n\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        mb: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, \"By\"), /*#__PURE__*/React.createElement(Heading, {\n        mb: 2,\n        as: \"h5\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, this.props.postItem.first_name), /*#__PURE__*/React.createElement(Text, {\n        mb: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_body), /*#__PURE__*/React.createElement(Stack, {\n        isInline: true,\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }, this.state.likes, \" \", likeOrLikes()), /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, this.state.comments.comments.length, \" \", commentOrcomments())), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.editPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.deletePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, \"Delete\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        pt: 4,\n        onClick: this.switchDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, viewOrClose()), this.state.displayThread ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, this.state.comments.comments.map(comment => {\n        return /*#__PURE__*/React.createElement(Flex, {\n          justifyContent: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Box, {\n          textAlign: \"left\",\n          borderWidth: 1,\n          borderRadius: \"lg\",\n          px: 2,\n          width: \"full\",\n          maxWidth: \"90%\",\n          boxShadow: \"lg\",\n          p: 1,\n          py: 1,\n          mb: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Heading, {\n          as: \"h5\",\n          size: \"sm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }\n        }, comment.first_name, \":\"), \" \", comment.body)));\n      })), /*#__PURE__*/React.createElement(AddComment, {\n        postItem: this.props.postItem,\n        userID: this.props.user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n    } else {\n      return /*#__PURE__*/React.createElement(Flex, {\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 4,\n        textAlign: \"center\",\n        borderWidth: 1,\n        borderRadius: \"lg\",\n        px: 4,\n        width: \"full\",\n        maxWidth: \"100%\",\n        boxShadow: \"lg\",\n        p: 4,\n        py: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        mb: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }, \"By\"), /*#__PURE__*/React.createElement(Heading, {\n        mb: 2,\n        as: \"h5\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }, this.props.postItem.first_name), /*#__PURE__*/React.createElement(Text, {\n        mb: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }, this.props.postItem.post_body), /*#__PURE__*/React.createElement(Stack, {\n        isInline: true,\n        width: \"full\",\n        justifyContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }\n      }, this.props.postItem.likes, \" \", likeOrLikes()), /*#__PURE__*/React.createElement(Text, {\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }, this.state.comments.comments.length, \" \", commentOrcomments())), /*#__PURE__*/React.createElement(Button, {\n        m: 1,\n        id: this.props.postItem.id,\n        onClick: this.addPostLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        pt: 4,\n        onClick: this.switchDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }, viewOrClose()), this.state.displayThread ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }\n      }, this.state.comments.comments.map(comment => {\n        return /*#__PURE__*/React.createElement(Flex, {\n          justifyContent: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Box, {\n          textAlign: \"left\",\n          borderWidth: 1,\n          borderRadius: \"lg\",\n          px: 2,\n          width: \"full\",\n          maxWidth: \"90%\",\n          boxShadow: \"lg\",\n          p: 1,\n          py: 1,\n          mb: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Heading, {\n          as: \"h5\",\n          size: \"sm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }\n        }, comment.first_name, \":\"), \" \", comment.body)));\n      })), /*#__PURE__*/React.createElement(AddComment, {\n        postItem: this.props.postItem,\n        userID: this.props.user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  members: state.members\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/PostItem/PostItem.js"],"names":["React","Component","withRouter","BrowserRouter","Router","Route","connect","Flex","Box","Button","Heading","Text","IconButton","Stack","Link","AddComment","Axios","PostItem","state","comments","likes","displayThread","updateLikes","setState","props","postItem","updateComments","get","id","then","result","console","table","data","catch","error","log","switchDisplay","addPostLike","event","payObj","target","dispatch","type","payload","deletePost","history","push","addPostComment","editPost","componentDidMount","render","commentOrcomments","length","likeOrLikes","viewOrClose","user","user_id","post_title","first_name","post_body","map","comment","body","mapStateToProps","members"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Button,\n  Heading,\n  Text,\n  IconButton,\n  Stack,\n  Link,\n} from \"@chakra-ui/core\";\nimport AddComment from \"../../Comment/AddComment\";\nimport Axios from \"axios\";\n\nclass PostItem extends Component {\n  state = {\n    comments: {\n      comments: 0,\n    },\n    likes: 0,\n\n    displayThread: false,\n  };\n\n  componentDidMount() {\n    this.updateComments();\n    this.updateLikes();\n  }\n\n  updateLikes = () => {\n    this.setState({\n      likes: this.props.postItem.likes,\n    });\n  };\n\n  updateComments = () => {\n    Axios.get(`api/posts/comments/${this.props.postItem.id}`)\n      .then((result) => {\n        console.table(result.data);\n        this.setState({\n          comments: { comments: result.data },\n        });\n      })\n      .catch((error) => console.log(\"error getting comments\", error));\n  };\n\n  switchDisplay = () => {\n    if (this.state.displayThread === true) {\n      this.setState({ displayThread: false });\n    } else {\n      this.setState({ displayThread: true });\n    }\n  };\n\n  addPostLike = (event) => {\n    const payObj = { id: event.target.id };\n    console.log(payObj);\n    console.log(this.props.postItem.id);\n    this.setState({\n      likes: this.props.postItem.likes + 1,\n    });\n    this.props.dispatch({\n      type: \"ADD_POST_LIKE\",\n      payload: payObj,\n    });\n  };\n\n  // Axios.delete(`/api/posts/${event.target.id}`)\n\n  deletePost = (event) => {\n    console.log(\"In delete\");\n    this.props.dispatch({ type: \"DELETE_POST\", payload: event.target.id });\n    try {\n      this.props.dispatch({ type: \"FETCH_POSTS\" });\n    } catch (error) {\n      console.log(error);\n    }\n    this.props.history.push(\"/\");\n  };\n\n  addPostComment = (event) => {};\n\n  editPost = (event) => {};\n\n  render() {\n    const commentOrcomments = () => {\n      if (this.state.comments.comments.length === 1) {\n        return \"Comment\";\n      } else {\n        return \"Comments\";\n      }\n    };\n\n    const likeOrLikes = () => {\n      if (this.state.likes === 1) {\n        return \"Like\";\n      } else {\n        return \"Likes\";\n      }\n    };\n\n    const viewOrClose = () => {\n      if (this.state.displayThread) {\n        return \"Close Thread\";\n      } else {\n        return \"View Thread\";\n      }\n    };\n\n    if (this.props.user.id === this.props.postItem.user_id) {\n      return (\n        <Flex width=\"full\" justifyContent=\"center\">\n          <Box\n            m={4}\n            textAlign=\"center\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            px={4}\n            width=\"full\"\n            maxWidth=\"100%\"\n            boxShadow=\"lg\"\n            p={4}\n            py={8}\n          >\n            {/* <div className=\"postItem\"> */}\n            <Heading as=\"h3\" size=\"lg\" mb={2}>\n              {this.props.postItem.post_title}\n            </Heading>\n            <Text>By</Text>\n            <Heading mb={2} as=\"h5\" size=\"sm\">\n              {this.props.postItem.first_name}\n            </Heading>\n            <Text mb={8}>{this.props.postItem.post_body}</Text>\n            <Stack isInline width=\"full\" justifyContent=\"center\">\n              <Text p={2}>\n                {this.state.likes} {likeOrLikes()}\n              </Text>\n              <Text p={2}>\n                {this.state.comments.comments.length} {commentOrcomments()}\n              </Text>\n            </Stack>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostLike}\n            >\n              Like\n            </Button>\n            <Button m={1} id={this.props.postItem.id} onClick={this.editPost}>\n              Edit\n            </Button>\n            <Button m={1} id={this.props.postItem.id} onClick={this.deletePost}>\n              Delete\n            </Button>\n            <br />\n            <br />\n            <Link pt={4} onClick={this.switchDisplay}>\n              {viewOrClose()}\n            </Link>\n\n            {this.state.displayThread ? (\n              <>\n                <Box>\n                  {this.state.comments.comments.map((comment) => {\n                    return (\n                      <Flex justifyContent=\"center\">\n                        <Box\n                          textAlign=\"left\"\n                          borderWidth={1}\n                          borderRadius=\"lg\"\n                          px={2}\n                          width=\"full\"\n                          maxWidth=\"90%\"\n                          boxShadow=\"lg\"\n                          p={1}\n                          py={1}\n                          mb={2}\n                        >\n                          <Text>\n                            <Heading as=\"h5\" size=\"sm\">\n                              {comment.first_name}:\n                            </Heading>{\" \"}\n                            {comment.body}\n                          </Text>\n                        </Box>\n                      </Flex>\n                    );\n                  })}\n                </Box>\n                <AddComment\n                  postItem={this.props.postItem}\n                  userID={this.props.user.id}\n                />\n              </>\n            ) : (\n              <></>\n            )}\n          </Box>\n        </Flex>\n      );\n    } else {\n      return (\n        <Flex width=\"full\" justifyContent=\"center\">\n          <Box\n            m={4}\n            textAlign=\"center\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            px={4}\n            width=\"full\"\n            maxWidth=\"100%\"\n            boxShadow=\"lg\"\n            p={4}\n            py={8}\n          >\n            {/* <div className=\"postItem\"> */}\n            <Heading as=\"h3\" size=\"lg\" mb={2}>\n              {this.props.postItem.post_title}\n            </Heading>\n            <Text>By</Text>\n            <Heading mb={2} as=\"h5\" size=\"sm\">\n              {this.props.postItem.first_name}\n            </Heading>\n            <Text mb={8}>{this.props.postItem.post_body}</Text>\n            <Stack isInline width=\"full\" justifyContent=\"center\">\n              <Text p={2}>\n                {this.props.postItem.likes} {likeOrLikes()}\n              </Text>\n              <Text p={2}>\n                {this.state.comments.comments.length} {commentOrcomments()}\n              </Text>\n            </Stack>\n            <Button\n              m={1}\n              id={this.props.postItem.id}\n              onClick={this.addPostLike}\n            >\n              Like\n            </Button>\n            <br />\n            <br />\n            <Link pt={4} onClick={this.switchDisplay}>\n              {viewOrClose()}\n            </Link>\n\n            {this.state.displayThread ? (\n              <>\n                <Box>\n                  {this.state.comments.comments.map((comment) => {\n                    return (\n                      <Flex justifyContent=\"center\">\n                        <Box\n                          textAlign=\"left\"\n                          borderWidth={1}\n                          borderRadius=\"lg\"\n                          px={2}\n                          width=\"full\"\n                          maxWidth=\"90%\"\n                          boxShadow=\"lg\"\n                          p={1}\n                          py={1}\n                          mb={2}\n                        >\n                          <Text>\n                            <Heading as=\"h5\" size=\"sm\">\n                              {comment.first_name}:\n                            </Heading>{\" \"}\n                            {comment.body}\n                          </Text>\n                        </Box>\n                      </Flex>\n                    );\n                  })}\n                </Box>\n                <AddComment\n                  postItem={this.props.postItem}\n                  userID={this.props.user.id}\n                />\n              </>\n            ) : (\n              <></>\n            )}\n          </Box>\n        </Flex>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  members: state.members,\n});\n\nexport default withRouter(connect(mapStateToProps)(PostItem));\n"]},"metadata":{},"sourceType":"module"}