{"ast":null,"code":"import _objectSpread from \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/AddPost/AddPost.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { Box, Flex, Text, Textarea, Input, FormControl, FormLabel } from \"@chakra-ui/core\";\n\nclass Edit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newPost: {\n        postTitle: \"\",\n        postBody: \"\"\n      }\n    };\n\n    this.handleChangeFor = (propertyName, event) => {\n      // Updates our local state when input is changed\n      this.setState({\n        newPost: _objectSpread(_objectSpread({}, this.state.newPost), {}, {\n          [propertyName]: event.target.value\n        })\n      });\n    };\n\n    this.cancel = event => {\n      this.props.history.push(\"/\");\n    };\n\n    this.submitInfo = event => {\n      // Updates the information with our current local state\n      this.props.dispatch({\n        type: \"ADD_POST\",\n        payload: this.state.newPost\n      });\n      this.setState({\n        // clears local state\n        newPost: {\n          postTitle: \"\",\n          postBody: \"\"\n        }\n      });\n      this.props.history.push(\"/\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Flex, {\n      mt: 10,\n      minHeight: \"100vh\",\n      width: \"full\",\n      align: \"center\",\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      borderWidth: 1,\n      borderRadius: \"lg\",\n      px: 4,\n      width: \"full\",\n      maxWidth: \"30%\",\n      boxShadow: \"lg\",\n      p: 4,\n      py: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"New Post Title:\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      required: true,\n      placeholder: \"New Title\",\n      onChange: event => this.handleChangeFor(\"postTitle\", event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"New Post Content:\"), /*#__PURE__*/React.createElement(Textarea, {\n      type: \"text\",\n      required: true,\n      placeholder: \"Post Content\",\n      rows: \"8\",\n      cols: \"50\",\n      onChange: event => this.handleChangeFor(\"postBody\", event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, \"Post\"), /*#__PURE__*/React.createElement(\"button\", {\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"small\",\n      onClick: this.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps)(Edit));","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/PostList/AddPost/AddPost.js"],"names":["React","Component","connect","withRouter","Box","Flex","Text","Textarea","Input","FormControl","FormLabel","Edit","state","newPost","postTitle","postBody","handleChangeFor","propertyName","event","setState","target","value","cancel","props","history","push","submitInfo","dispatch","type","payload","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport {\n  Box,\n  Flex,\n  Text,\n  Textarea,\n  Input,\n  FormControl,\n  FormLabel,\n} from \"@chakra-ui/core\";\n\nclass Edit extends Component {\n  // The edit component allows the user to change the title and or description of a movie.\n  state = {\n    newPost: {\n      postTitle: \"\",\n      postBody: \"\",\n    },\n  };\n\n  handleChangeFor = (propertyName, event) => {\n    // Updates our local state when input is changed\n    this.setState({\n      newPost: {\n        ...this.state.newPost,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  cancel = (event) => {\n    this.props.history.push(\"/\");\n  };\n\n  submitInfo = (event) => {\n    // Updates the information with our current local state\n\n    this.props.dispatch({ type: \"ADD_POST\", payload: this.state.newPost });\n    this.setState({\n      // clears local state\n      newPost: {\n        postTitle: \"\",\n        postBody: \"\",\n      },\n    });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    return (\n      <Flex\n        mt={10}\n        minHeight=\"100vh\"\n        width=\"full\"\n        align=\"center\"\n        justifyContent=\"center\"\n      >\n        <Box\n          textAlign=\"center\"\n          borderWidth={1}\n          borderRadius=\"lg\"\n          px={4}\n          width=\"full\"\n          maxWidth=\"30%\"\n          boxShadow=\"lg\"\n          p={4}\n          py={8}\n        >\n          <form onSubmit={this.submitInfo}>\n            <FormControl textAlign=\"left\">\n              <FormLabel>New Post Title:</FormLabel>\n              <Input\n                type=\"text\"\n                required\n                placeholder=\"New Title\"\n                onChange={(event) => this.handleChangeFor(\"postTitle\", event)}\n              />\n              <br />\n              <FormLabel>New Post Content:</FormLabel>\n              <Textarea\n                type=\"text\"\n                required\n                placeholder=\"Post Content\"\n                rows=\"8\"\n                cols=\"50\"\n                onChange={(event) => this.handleChangeFor(\"postBody\", event)}\n              />\n              <br />\n              <br />\n              <button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                type=\"submit\"\n              >\n                Post\n              </button>\n              <button\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={this.cancel}\n              >\n                Cancel\n              </button>\n            </FormControl>\n          </form>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nexport default withRouter(connect(mapStateToProps)(Edit));\n"]},"metadata":{},"sourceType":"module"}