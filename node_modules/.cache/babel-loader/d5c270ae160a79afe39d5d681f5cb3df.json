{"ast":null,"code":"var _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/Register/Register.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Flex, Box, Heading, FormControl, Button, FormLabel, Text, Input } from \"@chakra-ui/core\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    this.registerUser = event => {\n      event.preventDefault();\n\n      if (this.state.firstName && this.state.lastName && this.state.email && this.state.password) {\n        this.props.dispatch({\n          type: \"REGISTER\",\n          payload: {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password\n          }\n        });\n      } else {\n        this.props.dispatch({\n          type: \"REGISTRATION_INPUT_ERROR\"\n        });\n      }\n    };\n\n    this.handleInputChangeFor = propertyName => event => {\n      this.setState({\n        [propertyName]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Flex, {\n      mt: \"10%\",\n      minHeight: \"100vh\",\n      width: \"full\",\n      align: \"center\",\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      borderWidth: 1,\n      borderRadius: \"lg\",\n      px: 4,\n      width: \"full\",\n      maxWidth: \"30%\",\n      textAlign: \"center\",\n      boxShadow: \"lg\",\n      p: 4,\n      py: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, this.props.errors.registrationMessage && /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"alert\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, this.props.errors.registrationMessage), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.registerUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      py: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Register Account\"), /*#__PURE__*/React.createElement(FormControl, {\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      placeholder: \"First Name\",\n      onChange: this.handleInputChangeFor(\"firstName\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      mt: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"lastName\",\n      placeholder: \"Last Name\",\n      value: this.state.lastName,\n      onChange: this.handleInputChangeFor(\"lastName\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      mt: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Email Address\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleInputChangeFor(\"email\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      mt: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handleInputChangeFor(\"password\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      width: \"full\",\n      mt: 4,\n      className: \"register btn\",\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, \"Register\")))), /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"or\"), /*#__PURE__*/React.createElement(Button, {\n      width: \"full\",\n      mt: 4,\n      type: \"button\",\n      className: \"link-button btn\",\n      onClick: () => {\n        this.props.dispatch({\n          type: \"SET_TO_LOGIN_MODE\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"Login\")));\n  }\n\n} // Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\n\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(Register);","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/Register/Register.js"],"names":["React","Component","connect","Flex","Box","Heading","FormControl","Button","FormLabel","Text","Input","Register","state","firstName","lastName","email","password","registerUser","event","preventDefault","props","dispatch","type","payload","handleInputChangeFor","propertyName","setState","target","value","render","errors","registrationMessage","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  FormControl,\n  Button,\n  FormLabel,\n  Text,\n  Input,\n} from \"@chakra-ui/core\";\n\nclass Register extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (\n      this.state.firstName &&\n      this.state.lastName &&\n      this.state.email &&\n      this.state.password\n    ) {\n      this.props.dispatch({\n        type: \"REGISTER\",\n        payload: {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: \"REGISTRATION_INPUT_ERROR\" });\n    }\n  }; // end registerUser\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <Flex\n        mt=\"10%\"\n        minHeight=\"100vh\"\n        width=\"full\"\n        align=\"center\"\n        justifyContent=\"center\"\n      >\n        <Box\n          textAlign=\"center\"\n          borderWidth={1}\n          borderRadius=\"lg\"\n          px={4}\n          width=\"full\"\n          maxWidth=\"30%\"\n          textAlign=\"center\"\n          boxShadow=\"lg\"\n          p={4}\n          py={8}\n        >\n          {this.props.errors.registrationMessage && (\n            <h2 className=\"alert\" role=\"alert\">\n              {this.props.errors.registrationMessage}\n            </h2>\n          )}\n          <form onSubmit={this.registerUser}>\n            <Heading py={4}>Register Account</Heading>\n            <FormControl textAlign=\"left\">\n              <div>\n                <FormLabel>First Name</FormLabel>\n                <label htmlFor=\"firstName\">\n                  <Input\n                    type=\"text\"\n                    name=\"firstName\"\n                    value={this.state.firstName}\n                    placeholder=\"First Name\"\n                    onChange={this.handleInputChangeFor(\"firstName\")}\n                  />\n                </label>\n              </div>\n              <div>\n                <FormLabel mt={4}>Last Name</FormLabel>\n                <label htmlFor=\"lastName\">\n                  <Input\n                    type=\"text\"\n                    name=\"lastName\"\n                    placeholder=\"Last Name\"\n                    value={this.state.lastName}\n                    onChange={this.handleInputChangeFor(\"lastName\")}\n                  />\n                </label>\n              </div>\n              <div>\n                <FormLabel mt={4}>Email Address</FormLabel>\n                <label htmlFor=\"email\">\n                  <Input\n                    type=\"text\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    value={this.state.email}\n                    onChange={this.handleInputChangeFor(\"email\")}\n                  />\n                </label>\n              </div>\n              <div>\n                <FormLabel mt={4}>Password</FormLabel>\n                <label htmlFor=\"password\">\n                  <Input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={this.handleInputChangeFor(\"password\")}\n                  />\n                </label>\n              </div>\n              <div>\n                <Button\n                  width=\"full\"\n                  mt={4}\n                  className=\"register btn\"\n                  type=\"submit\"\n                  name=\"submit\"\n                  value=\"Register\"\n                >\n                  Register\n                </Button>\n              </div>\n            </FormControl>\n          </form>\n          <Text>or</Text>\n          <Button\n            width=\"full\"\n            mt={4}\n            type=\"button\"\n            className=\"link-button btn\"\n            onClick={() => {\n              this.props.dispatch({ type: \"SET_TO_LOGIN_MODE\" });\n            }}\n          >\n            Login\n          </Button>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}