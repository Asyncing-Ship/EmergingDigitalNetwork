{"ast":null,"code":"import { combineReducers } from \"redux\"; // Used to store posts returned from the server\n\nconst profile = (state = [{\n  bio: \"\"\n}], action) => {\n  switch (action.type) {\n    case \"SET_PROFILE\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n}; // Used to store the detail of the post that is selected\n\n\nconst profileLinks = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_USER_LINKS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n}; // Used to store the current post that is selected\n\n\nconst profilePosts = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_USER_POSTS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n}; // make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\n\n\nexport default combineReducers({\n  profile,\n  profileLinks,\n  profilePosts\n});","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/redux/reducers/profileReducer.js"],"names":["combineReducers","profile","state","bio","action","type","payload","profileLinks","profilePosts"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,MAAMC,OAAO,GAAG,CACdC,KAAK,GAAG,CACN;AACEC,EAAAA,GAAG,EAAE;AADP,CADM,CADM,EAMdC,MANc,KAOX;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD,CAdD,C,CAgBA;;;AACA,MAAMK,YAAY,GAAG,CAACL,KAAK,GAAG,EAAT,EAAaE,MAAb,KAAwB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD,CAPD,C,CASA;;;AACA,MAAMM,YAAY,GAAG,CAACN,KAAK,GAAG,EAAT,EAAaE,MAAb,KAAwB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD,CAPD,C,CASA;AACA;AACA;;;AACA,eAAeF,eAAe,CAAC;AAC7BC,EAAAA,OAD6B;AAE7BM,EAAAA,YAF6B;AAG7BC,EAAAA;AAH6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\n\n// Used to store posts returned from the server\nconst profile = (\n  state = [\n    {\n      bio: \"\",\n    },\n  ],\n  action\n) => {\n  switch (action.type) {\n    case \"SET_PROFILE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// Used to store the detail of the post that is selected\nconst profileLinks = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_USER_LINKS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// Used to store the current post that is selected\nconst profilePosts = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_USER_POSTS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  profile,\n  profileLinks,\n  profilePosts,\n});\n"]},"metadata":{},"sourceType":"module"}