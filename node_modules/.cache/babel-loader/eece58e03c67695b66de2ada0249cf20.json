{"ast":null,"code":"var _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/Comment/AddComment.js\";\nimport React, { Component } from \"react\";\nimport { Box, Textarea, FormControl, Button } from \"@chakra-ui/core\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass AddComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: {\n        body: \"\",\n        id: null\n      }\n    };\n\n    this.handleChangeFor = event => {\n      // Updates our local state when input is changed\n      this.setState({\n        comment: {\n          id: this.props.postItem.id,\n          user: this.props.userID,\n          body: event.target.value\n        }\n      });\n    };\n\n    this.handleComment = event => {\n      if (this.props.postItem.post_body) {\n        this.props.dispatch({\n          type: \"SUBMIT_POST_COMMENT\",\n          payload: this.state.comment\n        });\n      } else {\n        this.props.dispatch({\n          type: \"SUBMIT_RESOURCE_COMMENT\",\n          payload: this.state.comment\n        });\n      }\n\n      this.props.dispatch({\n        type: \"FETCH_POSTS\"\n      }).then(this.setState({\n        comments: {\n          body: \"\",\n          id: null\n        }\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Textarea, {\n      mb: 4,\n      mt: 2,\n      placeholder: \"Add a comment\",\n      isRequired: true,\n      value: this.state.comment.body,\n      onChange: event => this.handleChangeFor(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleComment(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Add Comment\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  members: state.members\n});\n\nexport default withRouter(connect(mapStateToProps)(AddComment));","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/Comment/AddComment.js"],"names":["React","Component","Box","Textarea","FormControl","Button","connect","withRouter","AddComment","state","comment","body","id","handleChangeFor","event","setState","props","postItem","user","userID","target","value","handleComment","post_body","dispatch","type","payload","then","comments","render","mapStateToProps","members"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,WAAxB,EAAqCC,MAArC,QAAmD,iBAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCQ,KADiC,GACzB;AACNC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,EAAE,EAAE;AAAhB;AADH,KADyB;;AAAA,SAKjCC,eALiC,GAKdC,KAAD,IAAW;AAC3B;AACA,WAAKC,QAAL,CAAc;AACZL,QAAAA,OAAO,EAAE;AACPE,UAAAA,EAAE,EAAE,KAAKI,KAAL,CAAWC,QAAX,CAAoBL,EADjB;AAEPM,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,MAFV;AAGPR,UAAAA,IAAI,EAAEG,KAAK,CAACM,MAAN,CAAaC;AAHZ;AADG,OAAd;AAOD,KAdgC;;AAAA,SAgBjCC,aAhBiC,GAgBhBR,KAAD,IAAW;AACzB,UAAI,KAAKE,KAAL,CAAWC,QAAX,CAAoBM,SAAxB,EAAmC;AACjC,aAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,qBADY;AAElBC,UAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWC;AAFF,SAApB;AAID,OALD,MAKO;AACL,aAAKM,KAAL,CAAWQ,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,yBADY;AAElBC,UAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWC;AAFF,SAApB;AAID;;AACD,WAAKM,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB,EAA6CE,IAA7C,CACE,KAAKZ,QAAL,CAAc;AACZa,QAAAA,QAAQ,EAAE;AAAEjB,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,EAAE,EAAE;AAAhB;AADE,OAAd,CADF;AAKD,KAjCgC;AAAA;;AAkCjCiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE,CADN;AAEE,MAAA,EAAE,EAAE,CAFN;AAGE,MAAA,WAAW,EAAC,eAHd;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,OAAX,CAAmBC,IAL5B;AAME,MAAA,QAAQ,EAAGG,KAAD,IAAW,KAAKD,eAAL,CAAqBC,KAArB,CANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAWE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKQ,aAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,CADF,CADF,CADF;AAmBD;;AAtDgC;;AAyDnC,MAAMQ,eAAe,GAAIrB,KAAD,KAAY;AAClCS,EAAAA,IAAI,EAAET,KAAK,CAACS,IADsB;AAElCa,EAAAA,OAAO,EAAEtB,KAAK,CAACsB;AAFmB,CAAZ,CAAxB;;AAKA,eAAexB,UAAU,CAACD,OAAO,CAACwB,eAAD,CAAP,CAAyBtB,UAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { Box, Textarea, FormControl, Button } from \"@chakra-ui/core\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass AddComment extends Component {\n  state = {\n    comment: { body: \"\", id: null },\n  };\n\n  handleChangeFor = (event) => {\n    // Updates our local state when input is changed\n    this.setState({\n      comment: {\n        id: this.props.postItem.id,\n        user: this.props.userID,\n        body: event.target.value,\n      },\n    });\n  };\n\n  handleComment = (event) => {\n    if (this.props.postItem.post_body) {\n      this.props.dispatch({\n        type: \"SUBMIT_POST_COMMENT\",\n        payload: this.state.comment,\n      });\n    } else {\n      this.props.dispatch({\n        type: \"SUBMIT_RESOURCE_COMMENT\",\n        payload: this.state.comment,\n      });\n    }\n    this.props.dispatch({ type: \"FETCH_POSTS\" }).then(\n      this.setState({\n        comments: { body: \"\", id: null },\n      })\n    );\n  };\n  render() {\n    return (\n      <div>\n        <Box>\n          <form>\n            <FormControl>\n              <Textarea\n                mb={4}\n                mt={2}\n                placeholder=\"Add a comment\"\n                isRequired\n                value={this.state.comment.body}\n                onChange={(event) => this.handleChangeFor(event)}\n              />\n            </FormControl>\n            <Button onClick={this.handleComment()}>Add Comment</Button>\n          </form>\n        </Box>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  members: state.members,\n});\n\nexport default withRouter(connect(mapStateToProps)(AddComment));\n"]},"metadata":{},"sourceType":"module"}