{"ast":null,"code":"import _objectSpread from \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/Resources/AddResource/AddResource.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nclass Edit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newResource: {\n        resourceTitle: \"\",\n        resourceBody: \"\"\n      }\n    };\n\n    this.handleChangeFor = (propertyName, event) => {\n      // Updates our local state when input is changed\n      this.setState({\n        newResource: _objectSpread(_objectSpread({}, this.state.newResource), {}, {\n          [propertyName]: event.target.value\n        })\n      });\n    };\n\n    this.cancel = event => {\n      this.props.history.push(\"/\");\n    };\n\n    this.submitInfo = event => {\n      // Updates the information with our current local state\n      this.props.dispatch({\n        type: \"ADD_RESOURCE\",\n        payload: this.state.newResource\n      });\n      this.setState({\n        // clears local state\n        newResource: {\n          resourceTitle: \"\",\n          resourceBody: \"\"\n        }\n      });\n      this.props.history.push(\"/resources\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"New Resource Title:\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      required: true //placeholder=\"New Title\"\n      ,\n      label: \"Title\",\n      onChange: event => this.handleChangeFor(\"resourceTitle\", event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"New Resource Content:\"), /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      required: true //placeholder=\"New Description\"\n      ,\n      rows: \"4\",\n      cols: \"50\",\n      label: \"Resource Content\",\n      onChange: event => this.handleChangeFor(\"resourceBody\", event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"small\",\n      onClick: this.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Cancel\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps)(Edit));","map":{"version":3,"sources":["/home/scoundrel/Desktop/eda-solo/edn-solo-project/src/Components/Resources/AddResource/AddResource.js"],"names":["React","Component","connect","withRouter","TextField","Button","Edit","state","newResource","resourceTitle","resourceBody","handleChangeFor","propertyName","event","setState","target","value","cancel","props","history","push","submitInfo","dispatch","type","payload","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nclass Edit extends Component {\n  // The edit component allows the user to change the title and or description of a movie.\n  state = {\n    newResource: {\n      resourceTitle: \"\",\n      resourceBody: \"\",\n    },\n  };\n\n  handleChangeFor = (propertyName, event) => {\n    // Updates our local state when input is changed\n    this.setState({\n      newResource: {\n        ...this.state.newResource,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  cancel = (event) => {\n    this.props.history.push(\"/\");\n  };\n\n  submitInfo = (event) => {\n    // Updates the information with our current local state\n\n    this.props.dispatch({\n      type: \"ADD_RESOURCE\",\n      payload: this.state.newResource,\n    });\n    this.setState({\n      // clears local state\n      newResource: {\n        resourceTitle: \"\",\n        resourceBody: \"\",\n      },\n    });\n    this.props.history.push(\"/resources\");\n  };\n\n  render() {\n    return (\n      <div className=\"content\">\n        <p>New Resource Title:</p>\n        <form onSubmit={this.submitInfo}>\n          <TextField\n            type=\"text\"\n            required\n            //placeholder=\"New Title\"\n            label=\"Title\"\n            onChange={(event) => this.handleChangeFor(\"resourceTitle\", event)}\n          />\n          <br />\n          <p>New Resource Content:</p>\n          <TextField\n            type=\"text\"\n            required\n            //placeholder=\"New Description\"\n            rows=\"4\"\n            cols=\"50\"\n            label=\"Resource Content\"\n            onChange={(event) => this.handleChangeFor(\"resourceBody\", event)}\n          />\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={this.cancel}\n          >\n            Cancel\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nexport default withRouter(connect(mapStateToProps)(Edit));\n"]},"metadata":{},"sourceType":"module"}